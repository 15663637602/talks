#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 4: Functors]{Chapter 4: Functors}
\subtitle{The Curry-Howard correspondence}
\author{Sergei Winitzki}
\date{December 24, 2017}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{navigation symbols}{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Container-like
\begin_inset Quotes erd
\end_inset

 type constructors
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Visualize 
\family typewriter
\size footnotesize
\color blue
Seq[T]
\family default
\size default
\color inherit
 as a container with some items of type 
\family typewriter
\size footnotesize
\color blue
T
\end_layout

\begin_deeper
\begin_layout Itemize
How to formalize this idea as a property of 
\family typewriter
\size footnotesize
\color blue
Seq
\family default
\size default
\color inherit
?
\end_layout

\end_deeper
\begin_layout Itemize
Another example of a container: 
\family typewriter
\size footnotesize
\color blue
Future[T]
\end_layout

\begin_deeper
\begin_layout Itemize
a value of type 
\family typewriter
\size footnotesize
\color blue
T
\family default
\size default
\color inherit
 will be available later, or may fail to arrive
\end_layout

\end_deeper
\begin_layout Standard
Let us separate the 
\begin_inset Quotes eld
\end_inset

bare container
\begin_inset Quotes erd
\end_inset

 functionality from other functionality
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes eld
\end_inset

bare container
\begin_inset Quotes erd
\end_inset

 will allow us to:
\end_layout

\begin_deeper
\begin_layout Itemize
manipulate items held within the container
\end_layout

\begin_deeper
\begin_layout Itemize
In FP, to 
\begin_inset Quotes eld
\end_inset

manipulate items
\begin_inset Quotes erd
\end_inset

 means to apply functions to values
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Container holds items
\begin_inset Quotes erd
\end_inset

 = we can apply a function to the items
\end_layout

\begin_deeper
\begin_layout Itemize
but the new items 
\emph on
remain
\emph default
 within the same container!
\end_layout

\begin_layout Itemize
need 
\family typewriter
\size footnotesize
\color blue
map:
\begin_inset space \space{}
\end_inset

Container[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 (A 
\begin_inset Formula $\Rightarrow$
\end_inset

 B) 
\begin_inset Formula $\Rightarrow$
\end_inset

 Container[B]
\end_layout

\end_deeper
\begin_layout Itemize
A 
\begin_inset Quotes eld
\end_inset

bare container
\begin_inset Quotes erd
\end_inset

 will 
\emph on
not
\emph default
 allow us to:
\end_layout

\begin_deeper
\begin_layout Itemize
make a new container out of a given set of items
\end_layout

\begin_layout Itemize
read values out of the container
\end_layout

\begin_layout Itemize
add more items into container, delete items from container
\end_layout

\begin_layout Itemize
wait until items are available in container, etc.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\family typewriter
Option[T]
\family default
 as a container I
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In the short notation: 
\begin_inset Formula $\text{Option}^{A}=1+A$
\end_inset


\end_layout

\begin_layout Itemize
The 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 function is required to have the type
\begin_inset Formula 
\[
\text{map}^{A,B}:1+A\Rightarrow\left(A\Rightarrow B\right)\Rightarrow1+B
\]

\end_inset


\end_layout

\begin_layout Standard
Main questions:
\end_layout

\begin_layout Itemize
How to avoid 
\begin_inset Quotes eld
\end_inset

information loss
\begin_inset Quotes erd
\end_inset

 in this function?
\end_layout

\begin_layout Itemize
Does this 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 allow us to 
\begin_inset Quotes eld
\end_inset

manipulate values within the container
\begin_inset Quotes erd
\end_inset

?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\family typewriter
Option[T]
\family default
 as a container II
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Avoiding 
\begin_inset Quotes eld
\end_inset

information loss
\begin_inset Quotes erd
\end_inset

 means:
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
map[A,A](opt)(x
\begin_inset Formula $\Rightarrow$
\end_inset

x) == opt
\family default
\size default
\color inherit
 â€“ 
\begin_inset Quotes eld
\end_inset


\series bold
identity law
\series default

\begin_inset Quotes erd
\end_inset

 for 
\family typewriter
\size footnotesize
\color blue
map
\end_layout

\begin_layout Itemize
We have two implementations of the type: 
\begin_inset Formula 
\[
\text{map}^{[A,B]}=(1+a^{A})\Rightarrow(f^{A\Rightarrow B})=1+f(a)
\]

\end_inset

and
\begin_inset Formula 
\[
\text{map}^{[A,B]}=(1+a^{A})\Rightarrow(f^{A\Rightarrow B})=1+0^{B}
\]

\end_inset

The second implementation has 
\begin_inset Quotes eld
\end_inset

information loss
\begin_inset Quotes erd
\end_inset

!
\end_layout

\begin_layout Itemize
Short notation for code (type annotations are optional):
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Short notation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Scala code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a^{A}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color blue
val a: A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f^{[A]\,B\Rightarrow C}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color blue
def f[A]: B 
\begin_inset Formula $\Rightarrow$
\end_inset

 C ...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a^{A}+b^{B}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color blue
x: Either[A, B] match {...}
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a^{A}+0^{B}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color blue
Left(a):
\begin_inset space \space{}
\end_inset

Either[A, B]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color blue
()
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\family typewriter
Option[T]
\family default
 as a container III
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Flip the two arguments in the type signature of 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}^{[A,B]}:\left(A\Rightarrow B\right)\Rightarrow\text{Option}^{A}\Rightarrow\text{Option}^{B}
\]

\end_inset


\end_layout

\begin_layout Itemize
A function is 
\begin_inset Quotes eld
\end_inset


\series bold
lifted
\series default

\begin_inset Quotes erd
\end_inset

 from 
\begin_inset Formula $A\Rightarrow B$
\end_inset

 to 
\begin_inset Formula $\text{Option}^{A}\Rightarrow\text{Option}^{B}$
\end_inset

 by 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}\left(f^{A\Rightarrow B}\right):\text{Option}^{A}\Rightarrow\text{Option}^{B}
\]

\end_inset


\end_layout

\begin_layout Itemize
Being able to manipulate values means that functions behave normally when
 lifted, i.e.
\begin_inset space \space{}
\end_inset

when applied within the container
\end_layout

\begin_layout Itemize
The standard properties of function composition are
\size footnotesize

\begin_inset Formula 
\begin{align*}
f^{A\Rightarrow B}\circ id^{B\Rightarrow B} & =f^{A\Rightarrow B}\\
id^{A\Rightarrow A}\circ f^{A\Rightarrow B} & =f^{A\Rightarrow B}\\
f^{A\Rightarrow B}\circ(g^{B\Rightarrow C}\circ h^{C\Rightarrow D}) & =(f^{A\Rightarrow B}\circ g^{B\Rightarrow C})\circ h^{C\Rightarrow D}
\end{align*}

\end_inset


\size default
and should hold for the 
\begin_inset Quotes eld
\end_inset

lifted
\begin_inset Quotes erd
\end_inset

 functions as well!
\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

identity law
\begin_inset Quotes erd
\end_inset

 already requires that 
\size footnotesize

\begin_inset Formula $\text{fmap}(\text{id}^{A\Rightarrow A})=\text{id}^{\text{Option}^{A}\Rightarrow\text{Option}^{A}}$
\end_inset


\end_layout

\begin_layout Itemize
It remains to require that 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 should preserve function composition:
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}\left(f^{A\Rightarrow B}\circ g^{B\Rightarrow C}\right)=\text{fmap}\left(f^{A\Rightarrow B}\right)\circ\text{fmap}\left(g^{B\Rightarrow C}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functor: the definition
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
An abstraction for 
\begin_inset Quotes eld
\end_inset

bare container
\begin_inset Quotes erd
\end_inset

 functionality
\end_layout

\begin_layout Standard
A 
\series bold
functor
\series default
 is:
\end_layout

\begin_layout Itemize
a type constructor with a type parameter, e.g.
\begin_inset space \space{}
\end_inset


\family typewriter
\size footnotesize
\color blue
MyType[T]
\end_layout

\begin_layout Itemize
such that a function 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 or, equivalently, 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 is available:
\size footnotesize

\begin_inset Formula 
\begin{align*}
\text{map}^{[A,B]}: & \text{MyType}^{A}\Rightarrow\left(A\Rightarrow B\right)\Rightarrow\text{MyType}^{B}\\
\text{fmap}^{[A,B]}: & \left(A\Rightarrow B\right)\Rightarrow\text{MyType}^{A}\Rightarrow\text{MyType}^{B}
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
such that the identity law and the composition law hold for any type 
\family typewriter
\size footnotesize
\color blue
T
\end_layout

\begin_deeper
\begin_layout Itemize
The laws are easier to formulate in terms of 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
:
\family typewriter
\size footnotesize
\color blue

\begin_inset Formula 
\begin{align*}
\text{fmap}\left(\text{id}\right) & =\text{id}\\
\text{fmap}\left(f\circ g\right) & =\text{fmap}\left(f\right)\circ\text{fmap}\left(g\right)
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Verify the laws for 
\family typewriter
\size footnotesize
\color blue
Option[A]
\family default
\size default
\color inherit
: see test code
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def fmap[A,B]: (A 
\begin_inset Formula $\Rightarrow$
\end_inset

 B) 
\begin_inset Formula $\Rightarrow$
\end_inset

 Option[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 Option[B] = f 
\begin_inset Formula $\Rightarrow$
\end_inset

 {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  case Some(a) 
\begin_inset Formula $\Rightarrow$
\end_inset

 Some(f(a))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  case None 
\begin_inset Formula $\Rightarrow$
\end_inset

 None
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
}
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functor: examples
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
(Almost) everything that has a 
\begin_inset Quotes eld
\end_inset


\family typewriter
map
\family default

\begin_inset Quotes erd
\end_inset

 is a functor
\end_layout

\begin_layout Itemize
Need to verify the laws!
\end_layout

\begin_layout Standard
Examples of functors in the Scala standard library:
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Option[T]
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Either[L, R] with respect to R
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Seq[T] and Iterator[T] 
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
the many subtypes of Seq (Range, List, Vector, IndexedSeq, etc.)
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Future[T]
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Try[T]
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Map[K, V] with respect to V (using mapValues)
\end_layout

\begin_layout Standard
Example of non-functor that has a 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 in the standard library:
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Set[T]
\end_layout

\begin_layout Standard
See example code
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functors: the roadmap
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Specific functors will have methods for creating them, reading values out
 of them, adding / removing items, waiting for items to arrive, etc.
\end_layout

\begin_layout Standard
Main questions:
\end_layout

\begin_layout Itemize
Given a type, how to recognize whether it is a functor?
\end_layout

\begin_layout Itemize
If so, how to implement the 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 function that satisfies the laws?
\end_layout

\begin_layout Itemize
Can we build new functors out of given ones?
\end_layout

\begin_layout Standard
Other topics:
\end_layout

\begin_layout Itemize
Contrafunctors, profunctors, and type constructors that are neither
\end_layout

\begin_layout Itemize
Implementing Functor instance using Cats
\end_layout

\begin_layout Itemize
Implementing Functor instance for recursive types 
\end_layout

\begin_layout Itemize
Functor typeclass derivation using Shapeless
\end_layout

\begin_layout Itemize
Functions that are parameterized by a Functor type constructor
\end_layout

\begin_layout Itemize
Examples of APIs that consume a functor, with type class constraint
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Worked examples
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Define 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Define type
\end_layout

\end_deeper
\end_body
\end_document
