#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 8: Applicative functors]{Chapter 8: Applicative functors and profunctors}
\subtitle{Part 2: Their laws and structure}
\author{Sergei Winitzki}
\date{2018-07-01}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{headline}{} % disable headline at top
\setbeamertemplate{navigation symbols}{} % disable navigation bar at bottom
\usepackage[all]{xy}
\makeatletter
% Macros to assist LyX with XYpic when using scaling.
\newcommand{\xyScaleX}[1]{%
\makeatletter
\xydef@\xymatrixcolsep@{#1}
\makeatother
} % end of \xyScaleX
\makeatletter
\newcommand{\xyScaleY}[1]{%
\makeatletter
\xydef@\xymatrixrowsep@{#1}
\makeatother
} % end of \xyScaleY
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Beginning of slides.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.25cm}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Deriving the 
\family typewriter
\size footnotesize
\color blue
ap
\family default
\size default
\color inherit
 operation from 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset

Can we avoid having to define 
\begin_inset Formula $\text{map}_{n}$
\end_inset

 separately for each 
\begin_inset Formula $n$
\end_inset

?
\end_layout

\begin_layout Itemize
Use curried arguments, 
\begin_inset Formula $\text{fmap}_{2}:(A\Rightarrow B\Rightarrow Z)\Rightarrow F^{A}\Rightarrow F^{B}\Rightarrow F^{Z}$
\end_inset


\end_layout

\begin_layout Itemize
Set 
\begin_inset Formula $A=B\Rightarrow Z$
\end_inset

 and apply 
\begin_inset Formula $\text{fmap}_{2}$
\end_inset

 to the identity 
\begin_inset Formula $\text{id}^{\left(B\Rightarrow Z\right)\Rightarrow\left(B\Rightarrow Z\right)}$
\end_inset

: obtain 
\begin_inset Formula $\text{ap}^{[B,Z]}:F^{B\Rightarrow Z}\Rightarrow F^{B}\Rightarrow F^{Z}\equiv\text{fmap}_{2}\left(\text{id}\right)$
\end_inset


\end_layout

\begin_layout Itemize
The functions 
\family typewriter
\size footnotesize
\color blue
fmap
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
ap
\family default
\size default
\color inherit
 are computationally equivalent:
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}_{2}\,f^{A\Rightarrow B\Rightarrow Z}=\text{fmap}\,f\circ\text{ap}
\]

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{B\Rightarrow Z}\ar[rd]\sp(0.45){\text{ap}}\\
F^{A}\ar[ru]\sp(0.45){\text{fmap}\,f}\ar[rr]\sb(0.45){\text{fmap}_{2}\,(f^{A\Rightarrow B\Rightarrow Z})} &  & \left(F^{B}\Rightarrow F^{Z}\right)
}
\]

\end_inset


\end_layout

\begin_layout Itemize
The functions 
\family typewriter
\size footnotesize
\color blue
fmap
\begin_inset Formula $_{3}$
\end_inset


\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
fmap
\begin_inset Formula $_{4}$
\end_inset


\family default
\size default
\color inherit
 etc.
\begin_inset space \space{}
\end_inset

can be defined similarly:
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}_{3}\,f^{A\Rightarrow B\Rightarrow C\Rightarrow Z}=\text{fmap}\,f\circ\text{ap}\circ\text{fmap}_{F^{B}\Rightarrow?}\text{ap}
\]

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{B\Rightarrow C\Rightarrow Z}\ar[r]\sp(0.45){\text{ap}^{[B,C\Rightarrow Z]}} & \left(F^{B}\Rightarrow F^{C\Rightarrow Z}\right)\ar[rd]\sp(0.55){\text{fmap}_{F^{B}\Rightarrow?}\text{ap}^{[C,Z]}}\\
F^{A}\ar[ru]\sp(0.45){\text{fmap}\,f}\ar[rrr]\sb(0.45){\text{fmap}_{3}\,(f^{A\Rightarrow B\Rightarrow C\Rightarrow Z})} &  &  & \left(F^{B}\Rightarrow F^{C}\Rightarrow F^{Z}\right)
}
\]

\end_inset


\end_layout

\begin_layout Itemize
Using the infix syntax will get rid of 
\size footnotesize

\begin_inset Formula $\text{fmap}_{F^{B}\Rightarrow?}\text{ap}$
\end_inset


\size default
 (see example code)
\end_layout

\begin_deeper
\begin_layout Itemize
Note the pattern: a natural transformation is equivalent to a lifting
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Deriving the 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 operation from 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Note: Function types 
\begin_inset Formula $A\Rightarrow B\Rightarrow C$
\end_inset

 and 
\begin_inset Formula $A\times B\Rightarrow C$
\end_inset

 are equivalent
\end_layout

\begin_layout Itemize
Uncurry 
\begin_inset Formula $\text{fmap}_{2}$
\end_inset

 to 
\begin_inset Formula $\text{fmap2}:\left(A\times B\Rightarrow C\right)\Rightarrow F^{A}\times F^{B}\Rightarrow F^{C}$
\end_inset

 
\end_layout

\begin_layout Itemize
Compute 
\begin_inset Formula $\text{fmap2}\left(f\right)$
\end_inset

 with 
\begin_inset Formula $f=\text{id}^{A\times B\Rightarrow A\times B}$
\end_inset

, expecting to obtain a simpler natural transformation: 
\begin_inset Formula 
\[
\text{zip}:F^{A}\times F^{B}\Rightarrow F^{A\times B}
\]

\end_inset

 
\end_layout

\begin_layout Itemize
This is quite similar to 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 for lists:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
List(1, 2).zip(List(10, 20)) = List((1, 10), (2, 20))
\end_layout

\end_deeper
\begin_layout Itemize
The functions 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
fmap2
\family default
\size default
\color inherit
 are computationally equivalent:
\size footnotesize

\begin_inset Formula 
\begin{align*}
\text{zip} & =\text{fmap2}\left(\text{id}\right)\\
\text{fmap2}\,(f^{A\times B\Rightarrow C}) & =\text{zip}\circ\text{fmap}\,f
\end{align*}

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{A\times B}\ar[rd]\sp(0.65){\ \ \text{fmap}\,f^{A\times B\Rightarrow C}}\\
F^{A}\times F^{B}\ar[ru]\sp(0.5){\text{zip}}\ar[rr]\sb(0.6){\text{fmap2}\,(f^{A\times B\Rightarrow C})} &  & F^{C}
}
\]

\end_inset


\end_layout

\begin_layout Itemize
The functor 
\begin_inset Formula $F$
\end_inset

 is 
\series bold
zippable
\series default
 if such a 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 exists (with appropriate laws)
\end_layout

\begin_deeper
\begin_layout Itemize
The same pattern: a natural transformation is equivalent to a lifting
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Equivalence of the operations 
\family typewriter
\size footnotesize
\color blue
ap
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset

Set 
\begin_inset Formula $A\equiv B\Rightarrow C$
\end_inset

, get 
\begin_inset Formula $\text{zip}^{[B\Rightarrow C,B]}:F^{B\Rightarrow C}\times F^{B}\Rightarrow F^{(B\Rightarrow C)\times B}$
\end_inset


\end_layout

\begin_layout Itemize
Use 
\family typewriter
\size footnotesize
\color blue
eval
\family default
\size default
\color inherit
 
\begin_inset Formula $:\left(B\Rightarrow C\right)\times B\Rightarrow C$
\end_inset

 and 
\begin_inset Formula $\text{fmap}\left(\text{eval}\right):F^{(B\Rightarrow C)\times B}\Rightarrow F^{C}$
\end_inset


\end_layout

\begin_layout Itemize
Uncurry: 
\family typewriter
\size footnotesize
\color blue
app
\family default
\size default
\color inherit

\begin_inset Formula $\text{}^{[B,C]}:F^{B\Rightarrow C}\times F^{B}\Rightarrow F^{C}\equiv\text{zip}\circ\text{fmap}\left(\text{eval}\right)$
\end_inset

 
\end_layout

\begin_layout Itemize
The functions 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
app
\family default
\size default
\color inherit
 are computationally equivalent:
\end_layout

\begin_deeper
\begin_layout Itemize
use 
\begin_inset Formula $\text{pair}:\left(A\Rightarrow B\Rightarrow A\times B\right)=a^{A}\Rightarrow b^{B}\Rightarrow a\times b$
\end_inset


\end_layout

\begin_layout Itemize
use 
\begin_inset Formula $\text{fmap}\left(\text{pair}\right)\equiv\text{pair}^{\uparrow}$
\end_inset

 on an 
\begin_inset Formula $fa^{F^{A}}$
\end_inset

, get 
\begin_inset Formula $(\text{pair}^{\uparrow}fa):F^{B\Rightarrow A\times B}$
\end_inset

; then
\size footnotesize

\begin_inset Formula 
\begin{align*}
\text{zip}\left(fa\times fb\right) & =\text{app}\left((\text{pair}^{\uparrow}fa)\times fb\right)\\
\text{app}^{[B\Rightarrow C,B]} & =\text{zip}^{[B\Rightarrow C,B]}\circ\text{fmap}\left(\text{eval}\right)
\end{align*}

\end_inset


\size default

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{(B\Rightarrow C)\times B}\ar[rd]\sp(0.65){\ \ \text{fmap}\left(\text{eval}\right)}\\
F^{B\Rightarrow C}\times F^{B}\ar[ru]\sp(0.5){\text{zip}}\ar[rr]\sb(0.55){\text{app}^{[B\Rightarrow C,B]}} &  & F^{C}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Rewrite this using curried arguments: 
\begin_inset Formula $\text{fzip}^{[A,B]}:F^{A}\Rightarrow F^{B}\Rightarrow F^{A\times B}$
\end_inset

; 
\begin_inset Formula $\text{ap}^{[B,C]}:F^{B\Rightarrow C}\Rightarrow F^{B}\Rightarrow F^{C}$
\end_inset

; then 
\begin_inset Formula $\text{ap}\,f=\text{fzip}\,f\circ\text{fmap}\left(\text{eval}\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Now 
\begin_inset Formula $\text{fzip}\,p^{F^{A}}q^{F^{B}}=\text{ap}\left(\text{pair}^{\uparrow}p\right)q$
\end_inset

, hence we may omit the argument 
\begin_inset Formula $q$
\end_inset

: 
\begin_inset Formula $\text{fzip}=\text{pair}^{\uparrow}\circ\text{ap}$
\end_inset

.
 With explicit types: 
\begin_inset Formula $\text{fzip}^{[A,B]}=\text{pair}^{\uparrow}\circ\text{ap}^{[B,A\Rightarrow B]}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Motivation for applicative laws.
 Naturality laws for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Treat 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 as a replacement for a monadic block with independent effects:
\family typewriter
\size footnotesize
\color blue

\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(x, y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
map2 (
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  cont1,
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  cont2
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
) { (x, y) 
\begin_inset Formula $\Rightarrow$
\end_inset

 g(x, y) }
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Main idea: Formulate the monad laws in terms of 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard
Naturality laws: Manipulate data in one of the containers
\family typewriter
\size footnotesize
\color blue

\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1.map(f)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(x, y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(f(x), y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
and similarly for 
\family typewriter
\size footnotesize
\color blue
cont2
\family default
\size default
\color inherit
 instead of 
\family typewriter
\size footnotesize
\color blue
cont1
\family default
\size default
\color inherit
; now rewrite in terms of for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
:
\end_layout

\begin_layout Itemize

\series bold
Left naturality
\series default
 for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
map2(cont1.map(f), cont2)(g)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  = map2(cont1, cont2){ (x, y) 
\begin_inset Formula $\Rightarrow$
\end_inset

 g(f(x), y) }
\end_layout

\begin_layout Itemize

\series bold
Right naturality
\series default
 for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
map2(cont1, cont2.map(f))(g)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  = map2(cont1, cont2){ (x, y) 
\begin_inset Formula $\Rightarrow$
\end_inset

 g(x, f(y)) }
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Associativity and identity laws for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset

Inline two generators out of three, in two different ways:
\family typewriter
\size footnotesize
\color blue

\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  (y, z) 
\begin_inset Formula $\leftarrow$
\end_inset

 for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
         yy 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
         zz 
\begin_inset Formula $\leftarrow$
\end_inset

 cont3
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
       } yield (yy, zz)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(x, y, z)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  (x, y) 
\begin_inset Formula $\leftarrow$
\end_inset

 for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
              xx 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
              yy 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
            } yield (xx, yy)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont3
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(x, y, z)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Write this in terms of 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 to obtain the 
\series bold
associativity law
\series default
 for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
:
\end_layout

\begin_layout LyX-Code
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\family typewriter
\size footnotesize
\color blue
map2(cont1, map2(cont2, cont3)((_,_)){ case(x,(y,z))
\begin_inset Formula $\Rightarrow$
\end_inset

g(x,y,z)}
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  = map2(map2(cont1, cont2)((_,_)), cont3){ case((x,y),z))
\begin_inset Formula $\Rightarrow$
\end_inset

g(x,y,z)}
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard
Empty context preceds a generator, or follows a generator:
\family typewriter
\size footnotesize
\color blue

\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for { x 
\begin_inset Formula $\leftarrow$
\end_inset

 pure(a)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
      y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(x, y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield g(a, y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Write this in terms of 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 to obtain the 
\series bold
identity laws
\series default
 for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
:
\end_layout

\begin_layout LyX-Code
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\family typewriter
\size footnotesize
\color blue
map2(pure(a), cont)(g) = cont.map { y 
\begin_inset Formula $\Rightarrow$
\end_inset

 g(a, y) }
\family default
\size default
\color inherit
 
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
map2(cont, pure(b))(g) = cont.map { x 
\begin_inset Formula $\Rightarrow$
\end_inset

 g(x, b) }
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Deriving the laws for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
: naturality
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset

The laws for 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 in a short notation; here
\size footnotesize
 
\begin_inset Formula $f\otimes g\equiv\left\{ a\times b\Rightarrow f(a)\times g(b)\right\} $
\end_inset


\size default
 
\size footnotesize

\begin_inset Formula 
\begin{align*}
\text{fmap2}\left(g^{A\times B\Rightarrow C}\right)\left(f^{\uparrow}q_{1}\times q_{2}\right) & =\text{fmap2}\left(\left(f\otimes\text{id}\right)\circ g\right)\left(q_{1}\times q_{2}\right)\\
\text{fmap2}\left(g^{A\times B\Rightarrow C}\right)\left(q_{1}\times f^{\uparrow}q_{2}\right) & =\text{fmap2}\left(\left(\text{id}\otimes f\right)\circ g\right)\left(q_{1}\times q_{2}\right)\\
\text{fmap2}\left(g_{1.23}\right)\left(q_{1}\times\text{fmap2}\left(\text{id}\right)\left(q_{2}\times q_{3}\right)\right) & =\text{fmap2}\left(g_{12.3}\right)\left(\text{fmap2}\left(\text{id}\right)\left(q_{1}\times q_{2}\right)\times q_{3}\right)\\
\text{fmap2}\left(g^{A\times B\Rightarrow C}\right)\left(\text{pure}\,a^{A}\times q_{2}^{F^{B}}\right) & =\left(b\Rightarrow g\left(a\times b\right)\right)^{\uparrow}q_{2}\\
\text{fmap2}\left(g^{A\times B\Rightarrow C}\right)\left(q_{1}^{F^{A}}\times\text{pure}\,b^{B}\right) & =\left(a\Rightarrow g\left(a\times b\right)\right)^{\uparrow}q_{1}
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
Express 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\begin{align*}
\text{fmap}_{2}\,g^{A\times B\Rightarrow C}\left(q_{1}^{F^{A}}\times q_{2}^{F^{B}}\right) & \equiv\left(\text{zip}\circ g^{\uparrow}\right)\left(q_{1}\times q_{2}\right)\\
\text{fmap}_{2}\,g^{A\times B\Rightarrow C} & \equiv\text{zip}\circ g^{\uparrow}
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
Combine the two naturality laws into one by using two functions 
\begin_inset Formula $f_{1}$
\end_inset

, 
\begin_inset Formula $f_{2}$
\end_inset

:
\size footnotesize

\begin_inset Formula 
\begin{align*}
\left(f_{1}^{\uparrow}\otimes f_{2}^{\uparrow}\right)\circ\text{fmap2}\,g & =\text{fmap2}\left(\left(f_{1}\otimes f_{2}\right)^{\uparrow}\circ g\right)\\
\left(f_{1}^{\uparrow}\otimes f_{2}^{\uparrow}\right)\circ\text{zip}\circ g^{\uparrow} & =\text{zip}\circ\left(f_{1}\otimes f_{2}\right)^{\uparrow}\circ g^{\uparrow}
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset

The 
\series bold
naturality law
\series default
 for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 then becomes: 
\size footnotesize

\begin_inset Formula $\left(f_{1}^{\uparrow}\otimes f_{2}^{\uparrow}\right)\circ\text{zip}=\text{zip}\circ\left(f_{1}\otimes f_{2}\right)^{\uparrow}$
\end_inset


\size default
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Deriving the laws for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
: associativity
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Express 
\family typewriter
\size footnotesize
\color blue
map2
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and substitute into the associativity law:
\size footnotesize

\begin_inset Formula 
\[
g_{1.23}^{\uparrow}\left(\text{zip}\left(q_{1}\times\text{zip}\left(q_{2}\times q_{3}\right)\right)\right)=g_{12.3}^{\uparrow}\left(\text{zip}\left(\text{zip}\left(q_{1}\times q_{2}\right)\times q_{3}\right)\right)
\]

\end_inset


\end_layout

\begin_layout Itemize
The arbitrary function 
\begin_inset Formula $g$
\end_inset

 is preceded by transformations of the tuples,
\size footnotesize

\begin_inset Formula 
\[
a\times\left(b\times c\right)\equiv\left(a\times b\right)\times c\quad\text{(type isomorphism)}
\]

\end_inset


\end_layout

\begin_layout Itemize
Assume that the isomorphism transformations are applied as needed, then
 we may formulate the 
\series bold
associativity law
\series default
 for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 more concisely:
\size footnotesize

\begin_inset Formula 
\[
\text{zip}\left(q_{1}\times\text{zip}\left(q_{2}\times q_{3}\right)\right)\cong\text{zip}\left(\text{zip}\left(q_{1}\times q_{2}\right)\times q_{3}\right)
\]

\end_inset


\size default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{1.4pc}\xyScaleX{3pc}F^{\left(A\times B\right)\times C}\ar[r] & F^{A\times B\times C}\ar[r]\ar[l] & F^{A\times\left(B\times C\right)}\ar[l]\\
F^{A\times B}\times F^{C}\ar[u]\sp(0.6){\text{zip}} & F^{A}\ar[ldd]\ar[r] & F^{A}\times F^{B\times C}\ar[u]\sb(0.6){\text{zip}}\\
F^{A\times B}\ar[u] & F^{C}\ar[rd]\ar[lu] & F^{B\times C}\ar[u]\\
F^{A}\times F^{B}\ar[u]\sp(0.6){\text{zip}} & F^{B}\ar[r]\ar[l] & F^{B}\times F^{C}\ar[u]\sb(0.6){\text{zip}}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Deriving the laws for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
: identity laws
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identity laws seem to be complicated, e.g.
\begin_inset space \space{}
\end_inset

the left identity:
\size footnotesize

\begin_inset Formula 
\[
g^{\uparrow}\left(\text{zip}\left(\text{pure}\,a\times q\right)\right)=\left(b\Rightarrow g\left(a\times b\right)\right)^{\uparrow}q
\]

\end_inset


\end_layout

\begin_layout Itemize
Replace 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 by a simpler 
\begin_inset Quotes eld
\end_inset

wrapped unit
\begin_inset Quotes erd
\end_inset

 method 
\family typewriter
\size footnotesize
\color blue
unit:
\begin_inset space \space{}
\end_inset

F[Unit]
\family default
\color inherit

\begin_inset Formula 
\[
\text{unit}^{F^{1}}\equiv\text{pure}\left(1\right);\quad\text{pure}(a^{A})=\left(1\Rightarrow a\right)^{\uparrow}\text{unit}
\]

\end_inset


\size default
Then the left identity law can be simplified using left naturality:
\size footnotesize

\begin_inset Formula 
\[
g^{\uparrow}\left(\text{zip}\left(\left(\left(1\Rightarrow a\right)^{\uparrow}\text{unit}\right)\times q\right)\right)=g^{\uparrow}\left(\left((1\Rightarrow a)\times\text{id}\right)^{\uparrow}\text{zip}\left(\text{unit}\times q\right)\right)
\]

\end_inset


\end_layout

\begin_layout Itemize
Denote 
\begin_inset Formula $\phi^{B\Rightarrow1\times B}\equiv b\Rightarrow1\times b$
\end_inset

 and 
\begin_inset Formula $\beta_{a}^{1\times B\Rightarrow A\times B}\equiv\left(1\Rightarrow a\right)\times\text{id}$
\end_inset

; then the function 
\begin_inset Formula $b\Rightarrow g\left(a\times b\right)$
\end_inset

 can be expressed more simply as 
\begin_inset Formula $\phi\circ\beta_{a}\circ g$
\end_inset

, and the naturality law becomes 
\size footnotesize

\begin_inset Formula 
\[
g^{\uparrow}(\beta_{a}^{\uparrow}\,\text{zip}\left(\text{unit}\times q\right))=\left(\beta_{a}\circ g\right)^{\uparrow}\left(\text{zip}\left(\text{unit}\times q\right)\right)=\left(\phi\circ\beta_{a}\circ g\right)^{\uparrow}q=\left(\beta_{a}\circ g\right)^{\uparrow}(\phi^{\uparrow}q)
\]

\end_inset


\size default
Omitting the common prefix 
\size footnotesize

\begin_inset Formula $\left(\beta_{a}\circ g\right)^{\uparrow}$
\end_inset


\size default
, we obtain the 
\series bold
left identity
\series default
 law:
\size footnotesize

\begin_inset Formula 
\[
\text{zip}\left(\text{unit}\times q\right)=\phi^{\uparrow}q
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Note that 
\begin_inset Formula $\phi^{\uparrow}$
\end_inset

 is an isomorphism between 
\begin_inset Formula $F^{B}$
\end_inset

 and 
\begin_inset Formula $F^{1\times B}$
\end_inset


\end_layout

\begin_layout Itemize
Assume that this isomorphism is applied as needed, then we may write
\size footnotesize

\begin_inset Formula 
\[
\text{zip}\left(\text{unit}\times q\right)\cong q
\]

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Applicative laws as monoid laws
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Use infix syntax for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and write 
\begin_inset Formula $\text{zip}\left(p\times q\right)\equiv p\bowtie q$
\end_inset


\end_layout

\begin_layout Itemize
Then the associativity and identity laws may be written as
\size footnotesize

\begin_inset Formula 
\begin{align*}
q_{1}\bowtie\left(q_{2}\bowtie q_{3}\right) & \cong\left(q_{1}\bowtie q_{2}\right)\bowtie q_{3}\\
\left(\text{unit}\,\bowtie q\right) & \cong q\\
\left(q\bowtie\text{unit}\right) & \cong q
\end{align*}

\end_inset


\size default
These are the laws of a monoid (with some assumed transformations)
\end_layout

\begin_layout Itemize
Naturality law for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 written in the infix syntax:
\size footnotesize

\begin_inset Formula 
\[
f_{1}^{\uparrow}q_{1}\bowtie f_{2}^{\uparrow}q_{2}=\left(f_{1}\otimes f_{2}\right)^{\uparrow}\left(q_{1}\bowtie q_{2}\right)
\]

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
unit
\family default
\size default
\color inherit
 has no laws; the naturality for 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 follows automatically
\end_layout

\begin_layout Itemize
The laws are simplest when formulated in terms of 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
unit
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
Naturality for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 will usually follow from parametricity
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Zippable
\begin_inset Quotes erd
\end_inset

 functors have only the associativity and naturality laws
\end_layout

\begin_layout Itemize
Applicative functors are a strict subset of monadic functors
\end_layout

\begin_deeper
\begin_layout Itemize
There are applicative functors that cannot be monads
\end_layout

\begin_layout Itemize
Applicative functor implementation may disagree with the monad
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Constructions of applicative functors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
All monadic constructions still hold for applicative functors
\end_layout

\begin_layout Itemize
Additionally, there are some non-monadic constructions
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv1$
\end_inset

 (constant functor) and 
\begin_inset Formula $F^{A}\equiv A$
\end_inset

 (identity functor)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any applicative 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
but 
\begin_inset Formula $G^{A}+H^{A}$
\end_inset

 is in general 
\emph on
not
\emph default
 applicative
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv A+G^{A}$
\end_inset

 for any applicative 
\begin_inset Formula $G^{A}$
\end_inset

 (
\series bold
free pointed
\series default
 over 
\begin_inset Formula $G$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv A+G^{F^{A}}$
\end_inset

 (recursive) for any functor 
\begin_inset Formula $G^{A}$
\end_inset

 (
\series bold
free monad
\series default
 over 
\begin_inset Formula $G$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv H^{A}\Rightarrow A$
\end_inset

 for any contrafunctor 
\begin_inset Formula $H^{A}$
\end_inset


\begin_inset Newline newline
\end_inset

Constructions that are not monadic:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv Z$
\end_inset

 (constant functor, 
\begin_inset Formula $Z$
\end_inset

 a monoid)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv Z+G^{A}$
\end_inset

 for any applicative 
\begin_inset Formula $G^{A}$
\end_inset

 and monoid 
\begin_inset Formula $Z$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{H^{A}}$
\end_inset

 when both 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 are applicative
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}+H^{G^{A}}$
\end_inset

 where 
\begin_inset Formula $H$
\end_inset

 is any functor and 
\begin_inset Formula $G$
\end_inset

 is applicative
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
All non-parameterized exp-poly types are monoids
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset

Using known monoid constructions (Chapter
\begin_inset space \space{}
\end_inset

7), we can implement 
\begin_inset Formula $X+Y$
\end_inset

, 
\begin_inset Formula $X\times Y$
\end_inset

, 
\begin_inset Formula $X\Rightarrow Y$
\end_inset

 as monoids when 
\begin_inset Formula $X$
\end_inset

 and 
\begin_inset Formula $Y$
\end_inset

 are monoids
\end_layout

\begin_layout Itemize
All primitive types have at least one monoid instance:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Int
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Float
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Double
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Char
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Boolean
\family default
\size default
\color inherit
 are 
\begin_inset Quotes eld
\end_inset

numeric
\begin_inset Quotes erd
\end_inset

 monoids
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Seq[A]
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Set[A]
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Map[K,V]
\family default
\size default
\color inherit
 are set-like monoids
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
String
\family default
\size default
\color inherit
 is equivalent to a sequence of integers; 
\family typewriter
\size footnotesize
\color blue
Unit
\family default
\size default
\color inherit
 is a trivial monoid
\end_layout

\end_deeper
\begin_layout Itemize
Therefore, all exponential-polynomial types without type parameters are
 monoids in at least one way
\end_layout

\begin_layout Itemize
Example of an exponential-polynomial type without type parameters: 
\size footnotesize

\begin_inset Formula $\text{Int}+\text{String}\times\text{String}\times\left(\text{Int}\Rightarrow\text{Bool}\right)+\left(\text{Bool}\times\text{String}\Rightarrow1+\text{String}\right)$
\end_inset


\end_layout

\begin_layout Itemize
Example of a type with parameters, which is not a monoid: 
\begin_inset Formula $A\Rightarrow B$
\end_inset


\end_layout

\begin_layout Standard
By constructions 1, 3, and 7, 
\emph on
all
\emph default
 polynomial 
\begin_inset Formula $F^{A}$
\end_inset

 with monoidal parameters are applicative: write 
\begin_inset Formula $F^{A}=Z_{1}+A\times\left(Z_{2}+A\times...\right)$
\end_inset

 with some monoids 
\begin_inset Formula $Z_{i}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $F^{A}=1+A\times A$
\end_inset

 (this 
\begin_inset Formula $F^{A}$
\end_inset

 is not a monad!)
\end_layout

\begin_layout Itemize
\begin_inset Formula $F^{A}=A+A\times A\times Z$
\end_inset

 where 
\begin_inset Formula $Z$
\end_inset

 is a monoid (this 
\begin_inset Formula $F^{A}$
\end_inset

 is a monad)
\end_layout

\begin_layout Standard
Examples of non-polynomial functors that are not applicative:
\end_layout

\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv\left(A\Rightarrow R\right)\Rightarrow S$
\end_inset

; 
\begin_inset Formula $\quad F^{A}\equiv\left(R\Rightarrow A\right)+\left(S\Rightarrow A\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Definition and constructions of applicative contrafunctors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset

The applicative functor laws, if formulated via 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
unit
\family default
\size default
\color inherit
, do not use 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 and therefore can be used for contrafunctors
\end_layout

\begin_layout Itemize
Define an 
\series bold
applicative contrafunctor
\series default
 
\begin_inset Formula $C^{A}$
\end_inset

 as having 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
unit
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\[
\text{zip}:C^{A}\times C^{B}\Rightarrow C^{A\times B};\quad\text{unit}:C^{1}
\]

\end_inset


\end_layout

\begin_layout Itemize
Identity and associativity laws must hold for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
unit
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
Note: applying 
\family typewriter
\size footnotesize
\color blue
contramap
\family default
\size default
\color inherit
 to the function 
\begin_inset Formula $a\times b\Rightarrow a$
\end_inset

 will yield some 
\begin_inset Formula $C^{A}\Rightarrow C^{A\times B}$
\end_inset

, but this will not give a valid implementation of 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
!
\end_layout

\end_deeper
\begin_layout Itemize
Naturality must hold for 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
, but with 
\family typewriter
\size footnotesize
\color blue
contramap
\family default
\size default
\color inherit
 instead of 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard
Applicative contrafunctor constructions:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv Z$
\end_inset

 (constant functor, 
\begin_inset Formula $Z$
\end_inset

 a monoid)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any applicative contrafunctors 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv G^{A}+H^{A}$
\end_inset

 for any applicative contrafunctors 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv H^{A}\Rightarrow G^{A}$
\end_inset

 for any functor 
\begin_inset Formula $H^{A}$
\end_inset

 and applicative contrafunctor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv H^{G^{A}}$
\end_inset

 for any functor 
\begin_inset Formula $H^{A}$
\end_inset

 and applicative contrafunctor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize

\emph on
All
\emph default
 exponential-polynomial contrafunctors with monoidal parameters are applicative!
 (These constructions cover all exp-poly cases.)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Definition and constructions of applicative profunctors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Profunctors
\series default
 have the type parameter in both covariant and contravariant positions;
 they are neither functors nor contrafunctors
\end_layout

\begin_layout Itemize
Examples of profunctors: 
\begin_inset Formula $P^{A}\equiv\text{Int}\times A\Rightarrow A$
\end_inset

; 
\begin_inset Formula $\quad P^{A}\equiv A+\left(A\Rightarrow R\right)$
\end_inset


\end_layout

\begin_layout Itemize

\emph on
All
\emph default
 exp-poly type constructors are profunctors since the type parameter is
 always in either a covariant or a contravariant position
\end_layout

\begin_layout Itemize
Definition of 
\series bold
applicative profunctor
\series default
: has 
\family typewriter
\size footnotesize
\color blue
zip
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
unit
\family default
\size default
\color inherit
 with the laws
\end_layout

\begin_layout Standard
Applicative profunctors have all previous constructions, and additionally:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any applicative profunctors 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv Z+G^{A}$
\end_inset

 for any applicative profunctor 
\begin_inset Formula $G^{A}$
\end_inset

 and monoid 
\begin_inset Formula $Z$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv A+G^{A}$
\end_inset

 for any applicative profunctor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv G^{A}+H^{G^{A}}$
\end_inset

 for any functor 
\begin_inset Formula $H^{A}$
\end_inset

 and applicative profunctor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv H^{A}\Rightarrow A$
\end_inset

 for any profunctor 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}\equiv H^{G^{A}}$
\end_inset

 and 
\begin_inset Formula $G^{H^{A}}$
\end_inset

 for any functor 
\begin_inset Formula $H^{A}$
\end_inset

 and applicative profunctor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Standard
Examples of non-applicative profunctors:
\end_layout

\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv\left(A\Rightarrow A\right)+\left(R\Rightarrow A\right)$
\end_inset

; 
\begin_inset Formula $\quad P^{A}\equiv\left(A\Rightarrow A\right)\Rightarrow1+A$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Show that 
\begin_inset Formula $F^{A}\equiv\left(Z\Rightarrow A\right)\Rightarrow1+A$
\end_inset

 is not applicative.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
End of slides.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
