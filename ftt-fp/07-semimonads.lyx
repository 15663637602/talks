#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 7: Functor-lifted computations II]{Chapter 7: Computations lifted to a functor context II}
\subtitle{Semimonads and monads}
\author{Sergei Winitzki}
\date{2018-02-10}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{headline}{} % disable headline at top
\setbeamertemplate{navigation symbols}{} % disable navigation bar at bottom
\usepackage[all]{xy}
\makeatletter
% Macros to assist LyX with XYpic when using scaling.
\newcommand{\xyScaleX}[1]{%
\makeatletter
\xydef@\xymatrixcolsep@{#1}
\makeatother
} % end of \xyScaleX
\makeatletter
\newcommand{\xyScaleY}[1]{%
\makeatletter
\xydef@\xymatrixrowsep@{#1}
\makeatother
} % end of \xyScaleY
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Itemize
Consider these possibly useful properties of containers 
\begin_inset Formula $C^{A}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Can create an empty container
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\text{empty}^{A}:1\Rightarrow C^{A}$
\end_inset

 – 
\series bold
fillable
\end_layout

\begin_layout Itemize
Can create a container that holds a given value
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\text{wrap}^{A}:A\Rightarrow C^{A}$
\end_inset

 – 
\series bold
pointed
\end_layout

\begin_layout Itemize
Can extract an element from container
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\text{get}^{A}:C^{A}\Rightarrow A$
\end_inset

 – 
\series bold
co-pointed
\end_layout

\begin_layout Itemize
Can extract an element safely (even if the container is empty)
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\text{toOption}^{A}:C^{A}\Rightarrow1+A$
\end_inset

 – 
\series bold
extractable
\end_layout

\begin_layout Itemize
Can select element(s) satisfying a condition
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\text{withFilter}^{A}:C^{A}\Rightarrow\left(A\Rightarrow\text{Boolean}\right)\Rightarrow C^{A}$
\end_inset

 – 
\series bold
filterable
\end_layout

\end_deeper
\begin_layout Itemize
to formulate such properties, use fully type-parametric functions
\end_layout

\begin_deeper
\begin_layout Itemize
note: 
\begin_inset Formula $\text{Boolean}\equiv1+1$
\end_inset


\end_layout

\begin_layout Itemize
all functions have the form 
\begin_inset Formula $F^{A}\Rightarrow G^{A}$
\end_inset

 with some functors 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $G$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
functions of this sort are called 
\series bold
natural transformations
\end_layout

\begin_layout Itemize
parametricity (naturality) is the property that holds automatically for
 all such functions
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computations within a functor context: Semimonads
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Intuitions behind adding more 
\begin_inset Quotes eld
\end_inset

left arrows
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Example: 
\size footnotesize

\begin_inset Formula 
\[
\sum_{i=1}^{n}\sum_{j=1}^{n}\sum_{k=1}^{n}f(i,j,k)
\]

\end_inset


\end_layout

\begin_layout Standard
Using Scala's 
\family typewriter
\size footnotesize
\color blue
for
\family default
\size default
\color inherit
/
\family typewriter
\size footnotesize
\color blue
yield
\family default
\size default
\color inherit
 syntax (
\begin_inset Quotes eld
\end_inset

functor block
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
(for { i 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to n
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
    j 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to n
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
    k 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to n
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  } yield f(i, j, k)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
).sum
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
(1 to m).flatMap { i 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   (1 to n).flatMap { j 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
     (1 to n).map { k 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
       f(i, j, k)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  }}}.sum
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 replaces the last left arrow, 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 replaces other left arrows
\end_layout

\begin_layout Itemize
Container must have both 
\family typewriter
\size footnotesize
\color blue
map
\family default
\size default
\color inherit
 (i.e.
\begin_inset space \space{}
\end_inset

be a functor) and 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
When the functor is 
\emph on
also
\emph default
 filterable, we can use 
\begin_inset Quotes eld
\end_inset


\family typewriter
\size footnotesize
\color blue
if
\family default
\size default
\color inherit

\begin_inset Quotes erd
\end_inset

 as well
\end_layout

\end_deeper
\begin_layout Itemize
Standard library defines 
\family typewriter
\size footnotesize
\color blue
flatMap()
\family default
\size default
\color inherit
 as equivalent of 
\family typewriter
\size footnotesize
\color blue
map() 
\begin_inset Formula $\circ$
\end_inset

 flatten
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
(1 to n).flatMap(j 
\begin_inset Formula $\Rightarrow$
\end_inset

 ...)
\family default
\size default
\color inherit
 is 
\family typewriter
\size footnotesize
\color blue
(1 to n).map(j 
\begin_inset Formula $\Rightarrow$
\end_inset

 ...).flatten
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
flatten:
\begin_inset space \space{}
\end_inset

F[F[A]]
\begin_inset Formula $\Rightarrow$
\end_inset

F[A]
\family default
\size default
\color inherit
 can be expressed through 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 as well:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
(xss:
\begin_inset space \space{}
\end_inset

Seq[Seq[A]]).flatten = xss.flatMap { (xs:
\begin_inset space \space{}
\end_inset

Seq[A]) 
\begin_inset Formula $\Rightarrow$
\end_inset

 xs }
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
Functors having 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
/
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 are 
\begin_inset Quotes eld
\end_inset

squashable
\begin_inset Quotes erd
\end_inset

 or 
\series bold
semimonads
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What is 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 doing with the data in a collection?
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Consider this schematic code using 
\family typewriter
\size footnotesize
\color blue
Seq
\family default
\size default
\color inherit
 as the container:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
val result = for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  i 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to m
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  j 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to n
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  x = f(i, j)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  k 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to p
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  y = g(i,j,k)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  ...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield h(x,y)
\end_layout

\begin_layout Standard
Computations are repeated for all 
\begin_inset Formula $i$
\end_inset

, for all 
\begin_inset Formula $j$
\end_inset

, etc.
\end_layout

\begin_layout Itemize
The computation processes all elements from each collection
\end_layout

\begin_deeper
\begin_layout Itemize
The number of resulting data items is 
\begin_inset Formula $m*n*p$
\end_inset


\family typewriter
\size footnotesize
\color blue
 
\end_layout

\begin_deeper
\begin_layout Itemize
All the resulting data items must fit within 
\emph on
the same
\emph default
 container type!
\end_layout

\begin_layout Itemize
The set of 
\emph on
container capacity counts
\emph default
 is closed under multiplication
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
What container types have this property?
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Seq,
\family default
\size default
\color inherit
 
\family typewriter
\size footnotesize
\color blue
NonEmptyList
\family default
\size default
\color inherit
 – can hold 
\emph on
any
\emph default
 number of elements 
\begin_inset Formula $\geq$
\end_inset

 min.
\begin_inset space \space{}
\end_inset

count
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Try
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Future
\family default
\size default
\color inherit
 – can hold 
\begin_inset Formula $0$
\end_inset

 or 
\begin_inset Formula $1$
\end_inset

 elements
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Tree-like
\begin_inset Quotes erd
\end_inset

 containers, e.g.
\begin_inset space \space{}
\end_inset

binary tree (holds 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $2$
\end_inset

, 
\begin_inset Formula $4$
\end_inset

, 
\begin_inset Formula $8$
\end_inset

, 
\begin_inset Formula $16$
\end_inset

, ...
\begin_inset space \space{}
\end_inset

elements)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Non-standard
\begin_inset Quotes erd
\end_inset

 containers: 
\begin_inset Formula $F^{A}\equiv\text{String}\Rightarrow A$
\end_inset

; 
\begin_inset Formula $F^{A}\equiv\left(A\Rightarrow\text{Int}\right)\Rightarrow\text{Int}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Working with 
\begin_inset Quotes eld
\end_inset

list-like
\begin_inset Quotes erd
\end_inset

 semimonads
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle

\family typewriter
\size footnotesize
\color blue
Seq
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
NonEmptyList
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Iterator
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Stream
\end_layout

\begin_layout Standard
Typical tasks solved with 
\begin_inset Quotes eld
\end_inset

list-like
\begin_inset Quotes erd
\end_inset

 semimonads:
\end_layout

\begin_layout Itemize
Create a list of all combinations or all permutations of a sequence
\end_layout

\begin_layout Itemize
Traverse a 
\begin_inset Quotes eld
\end_inset

solution tree
\begin_inset Quotes erd
\end_inset

 with DFS and filter out incorrect solutions
\end_layout

\begin_deeper
\begin_layout Itemize
Can use eager (
\family typewriter
\size footnotesize
\color blue
Seq
\family default
\size default
\color inherit
) or lazy (
\family typewriter
\size footnotesize
\color blue
Iterator
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Stream
\family default
\size default
\color inherit
) evaluation strategies
\end_layout

\end_deeper
\begin_layout Standard
Examples: see code
\end_layout

\begin_layout Enumerate
All permutations of 
\family typewriter
\size footnotesize
\color blue
Seq("a", "b", "c")
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Enumerate
All subsets of 
\family typewriter
\size footnotesize
\color blue
Set("a", "b", "c")
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Enumerate
All subsequences of length 3 out of the sequence 
\family typewriter
\size footnotesize
\color blue
(1 to m)
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Enumerate
All solutions of the 
\begin_inset Quotes eld
\end_inset

8 queens
\begin_inset Quotes erd
\end_inset

 problem
\end_layout

\begin_layout Enumerate
Generalize examples 1-3 to support arbitrary length 
\begin_inset Formula $n$
\end_inset

 instead of 3
\end_layout

\begin_layout Enumerate
Generalize example 4 to solve 
\begin_inset Formula $n$
\end_inset

-queens problem
\end_layout

\begin_layout Enumerate
Transform Boolean formulas between CNF and DNF 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Intuitions for 
\begin_inset Quotes eld
\end_inset

single-value
\begin_inset Quotes erd
\end_inset

 semimonads
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle

\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Try
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Future
\end_layout

\begin_layout Itemize
The container can hold 
\begin_inset Formula $n=1$
\end_inset

 or 
\begin_inset Formula $n=0$
\end_inset

 values of type 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_layout Standard
A schematic example of a functor block program using the 
\family typewriter
\size footnotesize
\color blue
Try
\family default
\size default
\color inherit
 functor:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
val result: Try[A] = for { 
\family roman
\color darkgray
// computations in the 
\family default
Try
\family roman
 functor
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  x 
\begin_inset Formula $\leftarrow$
\end_inset

 Try(...) 
\family roman
\color darkgray
// first computation; may fail
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  y = f(x) 
\family roman
\color darkgray
// no possibility of failure in this line
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  if p(y) 
\family roman
\color darkgray
// the entire expression will fail if this is false
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  z 
\begin_inset Formula $\leftarrow$
\end_inset

 Try(g(x, y))
\family roman
\color darkgray
 // may fail here
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  r 
\begin_inset Formula $\leftarrow$
\end_inset

 Try(...)
\family roman
\color darkgray
 // may fail here as well
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield r 
\family roman
\color darkgray
//  
\family default
r
\family roman
 is of type 
\family default
A
\family roman
, so 
\family default
result
\family roman
 is of type 
\family default
Try[A]
\end_layout

\begin_layout Itemize
Computations may yield a result (
\begin_inset Formula $n=1$
\end_inset

), or may fail (
\begin_inset Formula $n=0$
\end_inset

)
\end_layout

\begin_layout Itemize
The functor block chains several such computations 
\emph on
sequentially
\end_layout

\begin_deeper
\begin_layout Itemize
Computations are sequential even if using the 
\family typewriter
\size footnotesize
\color blue
Future
\family default
\size default
\color inherit
 functor!
\end_layout

\begin_layout Itemize
Once any computation fails, the entire functor block fails (
\begin_inset Formula $0*n=0$
\end_inset

)
\end_layout

\begin_layout Itemize
Only if 
\emph on
all
\emph default
 computations succeed, the functor block returns 
\emph on
one
\emph default
 value
\end_layout

\begin_layout Itemize
Filtering can also make the entire expression fail
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Flat
\begin_inset Quotes erd
\end_inset

 functor block replaces a chain of nested 
\family typewriter
\size footnotesize
\color blue
if/else
\family default
\size default
\color inherit
 or 
\family typewriter
\size footnotesize
\color blue
match/case
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Single-value semimonads: Examples I
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Properties 1 – 4 are expressed as laws for 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit

\begin_inset Formula $^{(p\Rightarrow\text{Boolean})\Rightarrow F^{A}\Rightarrow F^{A}}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{fmap}\,f^{A\Rightarrow B}\circ\text{filter}\,p^{B\Rightarrow\text{Boolean}}=\text{filter}\left(f\circ p\right)\circ\text{fmap}\,f^{A\Rightarrow B}$
\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{filter}\,p_{1}^{A\Rightarrow\text{Boolean}}\circ\text{filter}\,p_{2}^{A\Rightarrow\text{Boolean}}=\text{filter}\left(x\Rightarrow p_{1}(x)\wedge p_{2}(x)\right)$
\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{filter}\left(x^{A}\Rightarrow\text{true}\right)=\text{id}^{F^{A}\Rightarrow F^{A}}$
\end_inset

 
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{filter}\,p\circ\text{fmap}\,f^{A\Rightarrow B}=\text{filter}\,p\circ\text{fmap}\left(f_{|p}\right)$
\end_inset

 
\size default
where 
\size footnotesize

\begin_inset Formula $f_{|p}$
\end_inset


\size default
 is the 
\emph on
partial function
\emph default
 defined as 
\family typewriter
\size footnotesize
\color blue
{ case x if p(x) 
\begin_inset Formula $\Rightarrow$
\end_inset

 f(x) }
\family default
\size default
\color inherit
 – only works if 
\begin_inset Formula $p(x)$
\end_inset

 holds
\end_layout

\end_deeper
\begin_layout Itemize
Can define a type class 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
, method 
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Single-value semimonads: Examples II
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Properties 1 – 4 are expressed as laws for 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit

\begin_inset Formula $^{(p\Rightarrow\text{Boolean})\Rightarrow F^{A}\Rightarrow F^{A}}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{fmap}\,f^{A\Rightarrow B}\circ\text{filter}\,p^{B\Rightarrow\text{Boolean}}=\text{filter}\left(f\circ p\right)\circ\text{fmap}\,f^{A\Rightarrow B}$
\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{filter}\,p_{1}^{A\Rightarrow\text{Boolean}}\circ\text{filter}\,p_{2}^{A\Rightarrow\text{Boolean}}=\text{filter}\left(x\Rightarrow p_{1}(x)\wedge p_{2}(x)\right)$
\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{filter}\left(x^{A}\Rightarrow\text{true}\right)=\text{id}^{F^{A}\Rightarrow F^{A}}$
\end_inset

 
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{filter}\,p\circ\text{fmap}\,f^{A\Rightarrow B}=\text{filter}\,p\circ\text{fmap}\left(f_{|p}\right)$
\end_inset

 
\size default
where 
\size footnotesize

\begin_inset Formula $f_{|p}$
\end_inset


\size default
 is the 
\emph on
partial function
\emph default
 defined as 
\family typewriter
\size footnotesize
\color blue
{ case x if p(x) 
\begin_inset Formula $\Rightarrow$
\end_inset

 f(x) }
\family default
\size default
\color inherit
 – only works if 
\begin_inset Formula $p(x)$
\end_inset

 holds
\end_layout

\end_deeper
\begin_layout Itemize
Can define a type class 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
, method 
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Worked examples I: Programming with filterables
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
John can have up to 3 coupons, and Jill up to 2.
 
\emph on
All
\emph default
 of John's coupons must be valid on purchase day, while each of Jill's coupons
 is checked independently.
 Implement the filterable functor describing this setup.
\end_layout

\begin_layout Enumerate
A server received a sequence of requests.
 Each request must be authenticated.
 Once a non-authenticated request is found, no further requests are accepted.
 Is this setup described by a filterable functor?
\begin_inset Newline newline
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

For each of these functors, determine whether they are filterable, and if
 so, implement 
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\size default
\color inherit
 via a type class:
\end_layout

\begin_layout Enumerate

\family typewriter
\size footnotesize
\color blue
final case class P[T](first:
\begin_inset space \space{}
\end_inset

Option[T], second:
\begin_inset space \space{}
\end_inset

Option[(T, T)])
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv\text{Int}+\text{Int}\times A+\text{Int}\times A\times A+\text{Int}\times A\times A\times A$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}=\text{NonEmptyList}^{A}$
\end_inset

 defined recursively as 
\begin_inset Formula $F^{A}\equiv A+A\times F^{A}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{Z,A}\equiv Z+\text{Int}\times Z\times A\times A$
\end_inset

 (with respect to the type parameter 
\begin_inset Formula $A$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{Z,A}\equiv1+Z+\text{Int}\times A\times\text{List}^{A}$
\end_inset

 (w.r.t.
\begin_inset space \space{}
\end_inset

the type parameter 
\begin_inset Formula $A$
\end_inset

)
\end_layout

\begin_layout Enumerate
* Show that 
\begin_inset Formula $C^{Z,A}=A\Rightarrow1+Z$
\end_inset

 is a filterable 
\emph on
contrafunctor
\emph default
 w.r.t.
\begin_inset space \space{}
\end_inset


\begin_inset Formula $A$
\end_inset

 (implement 
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\size default
\color inherit
 with the same type signature; no law checking)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises I
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Confucius gave wisdom on each of the 7 days of a week.
 Sometimes the wise proverbs were hard to remember.
 If Confucius forgets what he said on a given day, he also forgets what
 he said on all the previous days of the week.
 Is this setup described by a filterable functor?
\end_layout

\begin_layout Enumerate
Define 
\family typewriter
\size footnotesize
\color blue
evenFilter(p)
\family default
\size default
\color inherit
 on an 
\family typewriter
\size footnotesize
\color blue
IndexedSeq[T]
\family default
\size default
\color inherit
 such that a value 
\family typewriter
\size footnotesize
\color blue
x:
\begin_inset space \space{}
\end_inset

T
\family default
\size default
\color inherit
 is retained if 
\family typewriter
\size footnotesize
\color blue
p(x)=true
\family default
\size default
\color inherit
 
\emph on
and
\emph default
 only if the sequence has an 
\emph on
even
\emph default
 number of elements 
\family typewriter
\size footnotesize
\color blue
y
\family default
\size default
\color inherit
 for which 
\family typewriter
\size footnotesize
\color blue
p(y)=false
\family default
\size default
\color inherit
.
 Does this define a filterable functor?
\begin_inset Newline newline
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

Implement 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 for these functors if possible (law checking optional):
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv\text{Int}+\text{String}\times A\times A\times A$
\end_inset


\end_layout

\begin_layout Enumerate

\family typewriter
\size footnotesize
\color blue
final case class Q[A, Z](id:
\begin_inset space \space{}
\end_inset

Long, user1:
\begin_inset space \space{}
\end_inset

Option[(A, Z)], user2:
\begin_inset space \space{}
\end_inset

Option[(A, Z)]) 
\family default
\size default
\color inherit
– with respect to the type parameter 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}=\text{MyTree}^{A}$
\end_inset

 defined recursively as 
\begin_inset Formula $F^{A}\equiv1+A\times F^{A}\times F^{A}$
\end_inset


\end_layout

\begin_layout Enumerate

\family typewriter
\size footnotesize
\color blue
final case class R[A](x:
\begin_inset space \space{}
\end_inset

Int,
\begin_inset space \space{}
\end_inset

y: Int, z:
\begin_inset space \space{}
\end_inset

A, data:
\begin_inset space \space{}
\end_inset

List[A])
\family default
\size default
\color inherit
, where the standard functor 
\begin_inset Formula $\text{List}$
\end_inset

 already has 
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\size default
\color inherit
 defined
\end_layout

\begin_layout Enumerate
* Show that 
\begin_inset Formula $C^{A}\equiv A+A\times A\Rightarrow1+Z$
\end_inset

 is a filterable contrafunctor
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Filterable functors: The laws in depth I
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Is there a shorter formulation of the laws that is easier to remember?
\end_layout

\begin_layout Itemize
Intuition: When 
\family typewriter
\size footnotesize
\color blue
p(x) = false
\family default
\size default
\color inherit
, replace 
\family typewriter
\size footnotesize
\color blue
x:
\begin_inset space \space{}
\end_inset

A
\family default
\size default
\color inherit
 by 
\family typewriter
\size footnotesize
\color blue
1:
\begin_inset space \space{}
\end_inset

Unit
\family default
\size default
\color inherit
 in 
\family typewriter
\size footnotesize
\color blue
F[A]
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
(1) How to replace 
\family typewriter
\size footnotesize
\color blue
x
\family default
\size default
\color inherit
 by 
\family typewriter
\size footnotesize
\color blue
1
\family default
\size default
\color inherit
 in 
\family typewriter
\size footnotesize
\color blue
F[A]
\family default
\size default
\color inherit
 without breaking the types?
\end_layout

\begin_layout Itemize
(2) How to transform the resulting type back to 
\family typewriter
\size footnotesize
\color blue
F[A]
\family default
\size default
\color inherit
?
\end_layout

\end_deeper
\begin_layout Itemize
We could do (1) if instead of 
\begin_inset Formula $F^{A}$
\end_inset

 we had 
\begin_inset Formula $F^{1+A}$
\end_inset

 i.e.
\begin_inset space ~
\end_inset


\family typewriter
\size footnotesize
\color blue
F[Option[A]]
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
Now use 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 to replace 
\begin_inset Formula $A$
\end_inset

 by 
\begin_inset Formula $1$
\end_inset

 in each item of type 
\begin_inset Formula $1+A$
\end_inset


\end_layout

\begin_layout Itemize
Get 
\begin_inset Formula $F^{1+A}$
\end_inset

 from 
\begin_inset Formula $F^{A}$
\end_inset

 using 
\begin_inset Formula $\text{inflate}:F^{A}\Rightarrow F^{1+A}=\text{fmap}\,(\text{Some}^{A\Rightarrow1+A})$
\end_inset

 
\end_layout

\begin_layout Itemize
Filter 
\begin_inset Formula $F^{1+A}\Rightarrow F^{1+A}$
\end_inset

 using 
\begin_inset Formula $\text{fmap}\left(x^{1+A}\Rightarrow\text{filter}_{\text{Opt}}(p^{A\Rightarrow\text{Boolean}})(x)\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{filter}\,p:\xymatrix{\xyScaleX{5pc}F^{A}\ar[r]\sb(0.45){\text{inflate}} & F^{1+A}\ar[r]_{\text{fmap}\left(\text{filter}_{\text{Opt}}p\right)} & F^{1+A}\ar[r]\sb(0.55){\text{deflate}} & F^{A}}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Doing (2) means 
\emph on
defining
\emph default
 a function 
\family typewriter
\size footnotesize
\color blue
deflate:
\begin_inset space \space{}
\end_inset

F[Option[A]] 
\begin_inset Formula $\Rightarrow$
\end_inset

 F[A]
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
standard library already has 
\family typewriter
\size footnotesize
\color blue
flatten[T]:
\begin_inset space \space{}
\end_inset

Seq[Option[T]] 
\begin_inset Formula $\Rightarrow$
\end_inset

 Seq[T]
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
Simplify
\size footnotesize
 
\begin_inset Formula $\text{fmap}(\text{Some}^{A\Rightarrow1+A})\circ\text{fmap}\left(\text{filter}_{\text{Opt}}p\right)=\text{fmap}\left(\text{bop}\left(p\right)\right)$
\end_inset


\size default
 where we defined 
\size footnotesize

\begin_inset Formula $\text{{\color{blue}bop}}\left(p\right):\left(A\Rightarrow1+A\right)\equiv$
\end_inset


\size default
 
\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Some(x).filter(p)
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
In this way, express 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 (see example code)
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\text{filter}\,p=\text{fmap}\left(\text{bop}\,p\right)\circ\text{deflate}$
\end_inset

.
 – Notation: 
\begin_inset Formula $\text{bop}\,p$
\end_inset

 is 
\begin_inset Formula $\text{bop}\left(p\right)$
\end_inset

, like 
\begin_inset Formula $\cos x$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{filter}\:p:\xymatrix{\xyScaleX{5pc}F^{A}\ar[r]\sb(0.45){\text{fmap}\left(\text{bop}\,p\right)} & F^{1+A}\ar[r]\sb(0.55){\text{deflate}} & F^{A}}
\]

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Filterable functors: Using 
\family typewriter
\size footnotesize
\color blue
deflate
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
So far we have expressed 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
We can also express 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 (assuming law 4 holds):
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\text{deflate}:\xymatrix{\xyScaleX{5pc}F^{1+A}\ar[r]\sb(0.5){\text{filter}\left(\text{.nonEmpty}\right)} & F^{1+A}\ar[r]\sb(0.5){\text{fmap}\left(\text{.get}\right)} & F^{A}}
\]

\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def deflate[F[_],A](foa: F[Option[A]]): F[A] =
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  foa.filter(_.nonEmpty).map(_.get) 
\family roman
\color gray
// 
\family default
_.get
\family roman
 is 
\begin_inset Formula $0+x^{A}\Rightarrow x^{A}$
\end_inset


\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\color gray
// for 
\family default
F = Seq
\family roman
, this would be 
\family default
foa.collect { case Some(x) 
\begin_inset Formula $\Rightarrow$
\end_inset

 x }
\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\color gray
// for arbitrary functor 
\family default
F
\family roman
 we need to use the partial function, 
\family default
_.get
\end_layout

\end_deeper
\begin_layout Itemize
This means 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 are 
\series bold
computationally equivalent
\end_layout

\begin_deeper
\begin_layout Itemize
We could specify filterable functors by implementing 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
The implementation of 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 would then be derived by library
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Use 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 to verify that some functors are certainly not filterable:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F^{A}=A+A\times A$
\end_inset

.
 Write 
\begin_inset Formula $F^{1+A}=1+A+(1+A)\times(1+A)$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
cannot map 
\begin_inset Formula $F^{1+A}\Rightarrow F^{A}$
\end_inset

 because we do not have 
\begin_inset Formula $1\rightarrow A$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $F^{A}=\text{Int}\Rightarrow A$
\end_inset

.
 Write 
\begin_inset Formula $F^{1+A}=\text{Int}\Rightarrow1+A$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
type signature of 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 would be 
\begin_inset Formula $\left(\text{Int}\Rightarrow1+A\right)\Rightarrow\text{Int}\Rightarrow A$
\end_inset


\end_layout

\begin_layout Itemize
cannot map 
\begin_inset Formula $F^{1+A}\Rightarrow F^{A}$
\end_inset

 because we do not have 
\begin_inset Formula $1+A\rightarrow A$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 is easier to implement and to reason about
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Filterable functors: The laws in depth II
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We were able to define 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 only by assuming that law 4 holds
\end_layout

\begin_layout Itemize
Now, law 4 is satisfied 
\emph on
automatically
\emph default
 if 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 is defined via 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
!
\end_layout

\begin_deeper
\begin_layout Itemize
Denote 
\size footnotesize

\begin_inset Formula $\psi_{p}^{F^{A}\Rightarrow F^{1+A}}\equiv\text{fmap}\left(\text{bop}\:p\right)$
\end_inset

 for brevity, then 
\begin_inset Formula $\text{filter}\,p=\psi_{p}\circ\text{deflate}$
\end_inset


\end_layout

\begin_layout Itemize
Law 4 then becomes: 
\size footnotesize

\begin_inset Formula $\psi_{p}\circ\text{deflate}\circ\text{fmap}\:f^{A\Rightarrow B}=\psi_{p}\circ\text{deflate}\circ\text{fmap}\:f_{|p}$
\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.1pc}\xyScaleX{3pc} & F^{1+A}\ar[r]\sp(0.5){\text{deflate}} & F^{A}\ar[rd]\sp(0.5){\text{ fmap}\:f^{A\Rightarrow B}}\\
F^{A}\ar[ru]\sp(0.5){\psi_{p}}\ar[rd]\sb(0.5){\psi_{p}} &  &  & F^{B}\\
 & F^{1+A}\ar[r]\sb(0.5){\text{deflate}} & F^{A}\ar[ru]\sb(0.5){\text{fmap}\:f_{|p}^{A\Rightarrow B}}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
We would like to interchange 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 in both sides
\end_layout

\begin_deeper
\begin_layout Itemize
We need a 
\emph on
naturality
\emph default
 law; let's express law 1 through 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
:
\end_layout

\end_deeper
\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\[
\text{fmap}\:f^{A\Rightarrow B}\circ\psi_{p}\circ\text{deflate}^{F,B}=\psi_{f\circ p}\circ\text{deflate}^{F,A}\circ\text{fmap}\:f^{A\Rightarrow B}
\]

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.1pc}\xyScaleX{3pc} & F^{B}\ar[r]\sp(0.5){\psi_{p}} & F^{1+B}\ar[rd]\sp(0.5){\text{ deflate}^{F,B}}\\
F^{A}\ar[ru]\sp(0.5){\text{fmap}\:f^{A\Rightarrow B}}\ar[rd]\sb(0.5){\psi_{f\circ p}} &  &  & F^{B}\\
 & F^{1+A}\ar[r]\sb(0.5){\text{deflate}^{F,A}} & F^{A}\ar[ru]\sb(0.5){\text{fmap}\:f^{A\Rightarrow B}}
}
\]

\end_inset

Can we simplify 
\begin_inset Formula $\text{fmap}\:f\circ\psi_{p}=\text{fmap}\:f\circ\text{fmap}\left(\text{bop}\,p\right)=\text{fmap}\left(f\circ\text{bop}\,p\right)$
\end_inset

?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Filterable functors: The laws in depth III
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
Have property: 
\begin_inset Formula $f^{A\Rightarrow B}\circ\text{bop}\left(p^{B\Rightarrow\text{Boolean}}\right)=\text{bop}\left(f\circ p\right)\circ\text{fmap}^{\text{Opt}}\,f$
\end_inset

 (see code)
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & B\ar[rd]\sp(0.5){\text{bop}\,p}\\
A\ar[ru]\sp(0.5){f^{A\Rightarrow B}}\ar[rd]\sb(0.4){\text{bop}\left(f\circ p\right)\,} &  & 1+B\\
 & 1+A\ar[ru]\sb(0.6){\text{fmap}^{\text{Opt}}f}
}
\]

\end_inset

We can now rewrite Law 1 as
\begin_inset Formula 
\[
\text{fmap}\,(\text{bop}\left(f\circ p\right))\circ\text{fmap}\,(\text{fmap}^{\text{Opt}}f)\circ\text{deflate}=\text{fmap}\left(\text{bop}\left(f\circ p\right)\right)\circ\text{deflate}\circ\text{fmap}\,f
\]

\end_inset

Remove common prefix 
\begin_inset Formula $\text{fmap}\left(\text{bop}\left(f\circ p\right)\right)\circ...$
\end_inset

 from both sides:
\begin_inset Formula 
\[
\text{fmap}\,(\text{fmap}^{\text{Opt}}f^{A\Rightarrow B})\circ\text{deflate}^{F,B}=\text{deflate}^{F,A}\circ\text{fmap}\,f^{A\Rightarrow B}\ \ -\text{ \textbf{law 1 for deflate}}
\]

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{1+B}\ar[rd]\sp(0.5){\ \text{deflate}^{F,B}}\\
F^{1+A}\ar[ru]\sp(0.5){\text{fmap}\,(\text{fmap}\,f)\ }\ar[rd]\sb(0.5){\text{deflate}^{F,A}\,} &  & F^{B}\\
 & F^{A}\ar[ru]\sb(0.5){\text{fmap\,}f^{A\Rightarrow B}}
}
\]

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
deflate
\family default
\color inherit

\begin_inset Formula $:F^{1+A}\Rightarrow F^{A}$
\end_inset


\size default
  is a 
\series bold
natural transformation
\series default
 (has naturality law)
\end_layout

\begin_deeper
\begin_layout Itemize
Example:
\size footnotesize
 
\begin_inset Formula $F^{A}=1+A\times A$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $F^{1+A}=1+(1+A)\times(1+A)=1+1\times1+A\times1+1\times A+A\times A$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\size footnotesize
natural transformations map containers 
\begin_inset Formula $G^{A}\Rightarrow H^{A}$
\end_inset

 by rearranging data in them
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Filterable functors: The laws in depth IV
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The naturality law for 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}\,(\text{fmap}^{\text{Opt}}f^{A\Rightarrow B})\circ\text{deflate}^{F,B}=\text{deflate}^{F,A}\circ\text{fmap}\,f^{A\Rightarrow B}
\]

\end_inset


\size default
Law 4 expressed via 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.1pc}\xyScaleX{3pc} & F^{1+A}\ar[r]\sp(0.5){\text{deflate}} & F^{A}\ar[rd]\sp(0.5){\text{ fmap}\:f^{A\Rightarrow B}}\\
F^{A}\ar[ru]\sp(0.5){\psi_{p}}\ar[rd]\sb(0.5){\psi_{p}} &  &  & F^{B}\\
 & F^{1+A}\ar[r]\sb(0.5){\text{deflate}} & F^{A}\ar[ru]\sb(0.5){\text{fmap}\:f_{|p}^{A\Rightarrow B}}
}
\]

\end_inset


\begin_inset Formula 
\[
\psi_{p}\circ\text{deflate}^{F,A}\circ\text{fmap}\:f^{A\Rightarrow B}=\psi_{p}\circ\text{deflate}^{F,A}\circ\text{fmap}\:f_{|p}
\]

\end_inset


\end_layout

\begin_layout Itemize
Use naturality to interchange 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 in both sides of law 4:
\size footnotesize

\begin_inset Formula 
\begin{align*}
\psi_{p}\circ\text{fmap}\,(\text{fmap}^{\text{Opt}}f)\circ\text{deflate}^{F,B} & =\psi_{p}\circ\text{fmap}\,(\text{fmap}^{\text{Opt}}f_{|p})\circ\text{deflate}^{F,B}\\
\text{[omit }\text{deflate}^{F,B}\text{ from} & \ \text{both sides; expand }\psi_{p}\text{]}\\
\text{bop}\,p\circ\text{fmap}^{\text{Opt}}f & =\text{bop}\,p\circ\text{fmap}^{\text{Opt}}f_{|p}\ \ -\text{ check this by hand:}
\end{align*}

\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Some(x).filter(p).map(f)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Some(x).filter(p).map { x if p(x) 
\begin_inset Formula $\Rightarrow$
\end_inset

 f(x) }
\end_layout

\begin_layout Itemize
These functions are equivalent because law 4 holds for 
\family typewriter
\size footnotesize
\color blue
Option
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Filterable functors: The laws in depth V
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Maybe 
\begin_inset Formula $\psi_{p}\circ\text{deflate}$
\end_inset

 is easier to handle than 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
? Let us define 
\size footnotesize

\begin_inset Formula 
\[
\text{{\color{blue}fmapOpt}}^{F,A,B}(f^{A\Rightarrow1+B}):F^{A}\Rightarrow F^{B}=\text{fmap}\:f\circ\text{deflate}^{F,B}
\]

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{1+B}\ar[rd]\sp(0.5){\ \text{deflate}^{F,B}}\\
F^{A}\ar[ru]\sp(0.5){\text{fmap}\,f^{A\Rightarrow1+B}\ }\ar[rr]\sb(0.5){\text{fmapOpt}\:f^{A\Rightarrow1+B}\,} &  & F^{B}
}
\]

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 are 
\emph on
equivalent
\emph default
: 
\size footnotesize

\begin_inset Formula $\text{deflate}^{F,A}=\text{fmapOpt}^{F,1+A,A}(\text{id}^{1+A\Rightarrow1+A})$
\end_inset

 
\end_layout

\begin_layout Itemize
Express laws 1 – 3 in terms of 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
: do they get simpler?
\end_layout

\begin_deeper
\begin_layout Itemize
Express 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
: 
\size footnotesize

\begin_inset Formula $\text{filter}\,p=\text{fmapOpt}^{F,A,A}\left(\text{bop}\,p\right)$
\end_inset


\end_layout

\begin_layout Itemize
Consider the expression needed for law 2: 
\begin_inset Formula $x\Rightarrow p_{1}(x)\wedge p_{2}(x)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\text{bop}\left(x\Rightarrow p_{1}(x)\wedge p_{2}(x)\right)=x^{A}\Rightarrow\left(\text{bop}\,p_{1}\right)(x)\text{.flatMap}\left(\text{bop}\,p_{2}\right)$
\end_inset

 
\size default
– see code
\end_layout

\begin_deeper
\begin_layout Itemize
Denote this computation by 
\begin_inset Formula $\diamond_{\text{Opt}}$
\end_inset

 and write
\size footnotesize

\begin_inset Formula 
\[
q_{1}^{A\Rightarrow1+B}\diamond_{\text{Opt}}q_{2}^{B\Rightarrow1+C}\equiv x^{A}\Rightarrow q_{1}(x).\text{flatMap}\left(q_{2}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Similar to composition of functions, except the types are 
\begin_inset Formula $A\Rightarrow1+B$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
This is a particular case of 
\series bold
Kleisli composition
\series default
; the general case: 
\size footnotesize

\begin_inset Formula $\diamond_{M}:(A\Rightarrow M^{B})\Rightarrow(B\Rightarrow M^{C})\Rightarrow(A\Rightarrow M^{C})$
\end_inset


\size default
; we set 
\begin_inset Formula $M^{A}\equiv1+A$
\end_inset


\end_layout

\begin_layout Itemize
The 
\series bold
Kleisli identity
\series default
 function: 
\begin_inset Formula $\text{id}_{\diamond_{\text{Opt}}}^{A\Rightarrow1+A}\equiv x^{A}\Rightarrow\text{Some}\left(x\right)$
\end_inset


\end_layout

\begin_layout Itemize
Kleisli composition 
\begin_inset Formula $\diamond_{\text{Opt}}$
\end_inset

 is associative and respects the Kleisli identity!
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 lifts a Kleisli
\begin_inset Formula $_{\text{Opt}}$
\end_inset

 function 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

 into the functor 
\begin_inset Formula $F$
\end_inset


\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Filterable functors: The laws in depth VI
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Simplifying down to two laws
\end_layout

\begin_layout Itemize
Only 
\emph on
two
\emph default
 laws are necessary for 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
!
\end_layout

\begin_layout Enumerate

\series bold
Identity law
\series default
 (covers old law 3): 
\size footnotesize

\begin_inset Formula 
\[
\text{fmapOpt}\,(\text{id}_{\diamond_{\text{Opt}}}^{A\Rightarrow1+A})=\text{id}^{F^{A}\Rightarrow F^{A}}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Composition law
\series default
 (covers old laws 1 and 2): 
\size footnotesize

\begin_inset Formula 
\[
\text{fmapOpt}\,(f^{A\Rightarrow1+B})\circ\text{fmapOpt}\,(g^{B\Rightarrow1+C})=\text{fmapOpt}\left(f\diamond_{\text{\textbf{Opt}}}g\right)
\]

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{2pc}\xyScaleX{3pc} & F^{B}\ar[rd]\sp(0.55){\ \text{fmapOpt}\,(g^{B\Rightarrow1+C})}\\
F^{A}\ar[ru]\sp(0.45){\text{fmapOpt}\,(f^{A\Rightarrow1+B})\ }\ar[rr]\sb(0.5){\text{fmapOpt}\left(f\diamond_{\text{Opt}}g\right)} &  & F^{C}
}
\]

\end_inset


\end_layout

\begin_layout Itemize
The two laws for 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 are very similar to the two functor laws
\end_layout

\begin_deeper
\begin_layout Itemize
Both of them use more complicated types than the old laws
\end_layout

\begin_layout Itemize
Conceptually, the new laws are simpler (lift 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

 into 
\begin_inset Formula $F^{A}\Rightarrow F^{B}$
\end_inset

)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Filterable functors: The laws in depth VII
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Showing that old laws 1 – 3 follow from the identity and composition laws
 for 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\end_layout

\begin_layout Itemize
Old law 3 is 
\emph on
equivalent
\emph default
 to the identity law for 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
:
\size footnotesize

\begin_inset Formula 
\[
\text{filter}\,(x^{A}\Rightarrow\text{true})=\text{fmap}\,(x^{A}\Rightarrow0+x)\circ\text{deflate}=\text{fmapOpt}\,(\text{id}_{\diamond_{\text{Opt}}})=\text{id}^{F^{A}\Rightarrow F^{A}}
\]

\end_inset


\end_layout

\begin_layout Itemize
Derive old law 2: need to work with
\size footnotesize
 
\begin_inset Formula $q_{1,2}\equiv\text{bop}\left(p_{1,2}\right):A\Rightarrow1+A$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
The Boolean conjunction 
\size footnotesize

\begin_inset Formula $x\Rightarrow p_{1}(x)\wedge p_{2}(x)$
\end_inset

 
\size default
corresponds to 
\size footnotesize

\begin_inset Formula $q_{1}\diamond_{\text{\textbf{Opt}}}q_{2}$
\end_inset


\end_layout

\begin_layout Itemize
Apply the composition law to Kleisli functions of types 
\size footnotesize

\begin_inset Formula $A\Rightarrow1+A$
\end_inset

 
\size default
:
\size footnotesize

\begin_inset Formula 
\begin{align*}
\text{filter}\,p_{1}\circ\text{filter}\,p_{2} & =\text{fmapOpt}\,q_{1}\circ\text{fmapOpt}\,q_{2}\\
=\text{fmapOpt}\left(q_{1}\diamond_{\text{\textbf{Opt}}}q_{2}\right) & =\text{fmapOpt}\left(\text{bop}\left(x\Rightarrow p_{1}(x)\wedge p_{2}(x)\right)\right)
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Derive old law 1:
\end_layout

\begin_deeper
\begin_layout Itemize
express 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 through 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
; old law 1 becomes
\size footnotesize

\begin_inset Formula 
\[
\text{fmap}\:f\circ\text{fmapOpt}\left(\text{bop}\,p\right)=\text{fmapOpt}\left(\text{bop}\left(f\circ p\right)\right)\circ\text{fmap}\:f\ \text{ – eq. (*)}
\]

\end_inset


\end_layout

\begin_layout Itemize
lift 
\begin_inset Formula $f^{A\Rightarrow B}$
\end_inset

 to Kleisli
\begin_inset Formula $_{\text{Opt}}$
\end_inset

 by defining 
\size footnotesize

\begin_inset Formula $k_{f}^{A\Rightarrow1+B}=f\circ\text{id}_{\diamond_{\text{\textbf{Opt}}}}$
\end_inset

;
\size default
 then we have 
\begin_inset Formula $\text{fmapOpt}\left(k_{f}\right)=\text{fmap}\,k_{f}\circ\text{deflate}=\text{fmap}\:f\circ\text{fmap}\,\text{id}_{\diamond_{\text{\textbf{Opt}}}}\circ\text{deflate}=\text{fmap}\,f$
\end_inset


\end_layout

\begin_layout Itemize
rewrite eq.
\begin_inset space \space{}
\end_inset

(*) as 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}\left(k_{f}\diamond_{\text{\textbf{Opt}}}\text{bop}\,p\right)=\text{fmapOpt}\left(\text{bop}\left(f\circ p\right)\diamond_{\text{\textbf{Opt}}}k_{f}\right)$
\end_inset

 
\end_layout

\begin_layout Itemize
it remains to show that 
\size footnotesize

\begin_inset Formula $k_{f}\diamond_{\text{\textbf{Opt}}}\text{bop}\,p=\text{bop}\left(f\circ p\right)\diamond_{\text{\textbf{Opt}}}k_{f}$
\end_inset

 
\end_layout

\begin_layout Itemize
use the properties 
\size footnotesize

\begin_inset Formula $k_{f}\diamond_{\text{\textbf{Opt}}}q=f\circ q$
\end_inset

 and 
\begin_inset Formula $q\diamond_{\text{\textbf{Opt}}}k_{f}=q\circ\text{fmap}^{\text{Opt}}f$
\end_inset

, and 
\begin_inset Formula $f\circ\text{bop}\,p=\text{bop}\left(f\circ p\right)\circ\text{fmap}^{\text{Opt}}\,f$
\end_inset

 (property from slide 11)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Summary: The methods and the laws
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Filterable functors can be defined via 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
, or 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
All three methods are 
\emph on
equivalent
\emph default
 but have different roles:
\end_layout

\begin_deeper
\begin_layout Itemize
The easiest to use in program code is 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 / 
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
The easiest type signature to implement and reason about is 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Conceptually, the laws are easiest to remember with 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
* The 2 laws for 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 are the 2 functor laws with a Kleisli 
\begin_inset Quotes eld
\end_inset

twist
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
* Category theory accommodates this via a generalized definition of functors
 as liftings between 
\begin_inset Quotes eld
\end_inset

twisted
\begin_inset Quotes erd
\end_inset

 types.
 Compare:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\text{fmap}:\left(A\Rightarrow B\right)\Rightarrow F^{A}\Rightarrow F^{B}$
\end_inset

 – ordinary container (
\begin_inset Quotes eld
\end_inset

endofunctor
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{contrafmap}:\left(B\Rightarrow A\right)\Rightarrow F^{A}\Rightarrow F^{B}$
\end_inset

 – lifting from reversed functions
\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{fmapOpt}:\left(A\Rightarrow1+B\right)\Rightarrow F^{A}\Rightarrow F^{B}$
\end_inset

 – lifting from Kleisli
\begin_inset Formula $_{\text{Opt}}$
\end_inset

-functions 
\end_layout

\end_deeper
\begin_layout Itemize
CT gives us some 
\emph on
intuitions
\emph default
 about how to derive better laws:
\end_layout

\begin_deeper
\begin_layout Itemize
look for type signatures that resemble a generalized sort of 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
look for natural transformations and use the naturality law
\end_layout

\end_deeper
\begin_layout Itemize
However, CT does not directly provide any derivations for the laws
\end_layout

\begin_deeper
\begin_layout Itemize
you will not find the laws for 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 or 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
 in any CT book
\end_layout

\begin_layout Itemize
CT is abstract, only gives hints about possible further directions
\end_layout

\begin_deeper
\begin_layout Itemize
investigate functors having 
\begin_inset Quotes eld
\end_inset

liftings
\begin_inset Quotes erd
\end_inset

 with different type signatures
\end_layout

\begin_layout Itemize
replace 
\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 in the Kleisli
\begin_inset Formula $_{\text{Opt}}$
\end_inset

 construction by another functor
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Structure of filterable functors
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
How to recognize a filterable functor by its type?
\end_layout

\begin_layout Standard
Intuition from 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit
: reshuffle data in 
\begin_inset Formula $F^{A}$
\end_inset

 after replacing some 
\begin_inset Formula $A$
\end_inset

's by 
\begin_inset Formula $1$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

reshuffling
\begin_inset Quotes erd
\end_inset

 usually means reusing different parts of a disjunction
\end_layout

\begin_layout Standard
Some constructions of exponential-polynomial filterable functors 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}=Z$
\end_inset

 (constant functor) for a fixed type 
\begin_inset Formula $Z$
\end_inset

 (define 
\begin_inset Formula $\text{fmapOpt}\,f=\text{id}$
\end_inset

)
\end_layout

\begin_deeper
\begin_layout Itemize
Note: 
\begin_inset Formula $F^{A}=A$
\end_inset

 (identity functor) is 
\emph on
not
\emph default
 filterable
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any filterable functors 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}+H^{A}$
\end_inset

 for any filterable functors 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{H^{A}}$
\end_inset

 for 
\emph on
any
\emph default
 functor 
\begin_inset Formula $G^{A}$
\end_inset

 and filterable functor 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv1+A\times G^{A}$
\end_inset

 for a filterable functor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Note: 
\emph on
pointed
\emph default
 types 
\begin_inset Formula $P$
\end_inset

 are isomorphic to 
\begin_inset Formula $1+Z$
\end_inset

 for some type 
\begin_inset Formula $Z$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Example of non-trivial pointed type: 
\begin_inset Formula $A\Rightarrow A$
\end_inset


\end_layout

\begin_layout Itemize
Example of non-pointed type: 
\begin_inset Formula $A\Rightarrow B$
\end_inset

 when 
\begin_inset Formula $A$
\end_inset

 is different from 
\begin_inset Formula $B$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
So 
\begin_inset Formula $F^{A}\equiv P+A\times G^{A}$
\end_inset

 where 
\begin_inset Formula $P$
\end_inset

 is a pointed type and 
\begin_inset Formula $G^{A}$
\end_inset

 is filterable
\end_layout

\begin_layout Itemize
Also have 
\begin_inset Formula $F^{A}\equiv P+A\times A\times...\times A\times G^{A}$
\end_inset

 similarly
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}+A\times F^{A}$
\end_inset

 (recursive) for a filterable functor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\Rightarrow H^{A}$
\end_inset

 if
\emph on
 
\emph default
contrafunctor 
\begin_inset Formula $G^{A}$
\end_inset

 and functor 
\begin_inset Formula $H^{A}$
\end_inset

 
\emph on
both
\emph default
 
\emph on
filterable
\end_layout

\begin_deeper
\begin_layout Itemize
Note: the functor 
\begin_inset Formula $F^{A}\equiv G^{A}\Rightarrow A$
\end_inset

 is not filterable
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Worked examples II: Constructions of filterable functors I
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
(2) The 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 laws hold for 
\begin_inset Formula $F^{A}\times G^{A}$
\end_inset

 if they hold for 
\begin_inset Formula $F^{A}$
\end_inset

 and 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

, get 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F}(f):F^{A}\Rightarrow F^{B}$
\end_inset

 
\size default
and 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{G}(f):G^{A}\Rightarrow G^{B}$
\end_inset


\end_layout

\begin_layout Itemize
Define 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F\times G}f\equiv p^{F^{A}}\times q^{G^{A}}\Rightarrow\text{fmapOpt}_{F}(f)(p)\times\text{fmapOpt}_{G}(f)(q)$
\end_inset


\end_layout

\begin_layout Itemize
Identity law: 
\begin_inset Formula $f=\text{id}_{\diamond_{\text{Opt}}}$
\end_inset

, so 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F}f=\text{id}$
\end_inset


\size default
 and 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{G}f=\text{id}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Hence we get 
\begin_inset Formula $\text{fmapOpt}_{F+G}(f)(p\times q)=\text{id}(p)\times\text{id}(q)=p\times q$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Composition law:
\size footnotesize

\begin_inset Formula 
\begin{align*}
 & (\text{fmapOpt}_{F\times G}\,f_{1}\circ\text{fmapOpt}_{F+G}\,f_{2})(p\times q)\\
=\  & \text{fmapOpt}_{F\times G}(f_{2})\left(\text{fmapOpt}_{F}(f_{1})(p)\times\text{fmapOpt}_{G}(f_{1})(q)\right)\\
=\  & (\text{fmapOpt}_{F}\,f_{1}\circ\text{fmapOpt}_{F}\,f_{2})(p)\times\left(\text{fmapOpt}_{G}\,f_{1}\circ\text{fmapOpt}_{G}\,f_{2}\right)(q)\\
=\  & \text{fmapOpt}_{F}(f_{1}\diamond_{\text{Opt}}f_{2})(p)\times\text{fmapOpt}_{G}(f_{1}\diamond f_{2})(q)\\
=\  & \text{fmapOpt}_{F\times G}(f_{1}\diamond_{\text{Opt}}f_{2})(p\times q)
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
Exactly the same proof as that for functor property for 
\begin_inset Formula $F^{A}\times G^{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
this is because 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 corresponds to a generalized functor
\end_layout

\end_deeper
\begin_layout Itemize
New proofs are necessary only when using non-filterable functors
\end_layout

\begin_deeper
\begin_layout Itemize
these are used in constructions 4 – 6
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Worked examples II: Constructions of filterable functors II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
(5) The 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 laws hold for 
\begin_inset Formula $F^{A}\equiv1+A\times G^{A}$
\end_inset

 if they hold for 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

, get 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{G}(f):G^{A}\Rightarrow G^{B}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
Define 
\begin_inset Formula $\text{fmapOpt}_{F}(f)(1+a^{A}\times q^{G^{A}})$
\end_inset

 by returning 
\begin_inset Formula $0+b\times\text{fmapOpt}_{G}(f)(q)$
\end_inset

 if the argument is 
\begin_inset Formula $0+a\times q$
\end_inset

 and 
\begin_inset Formula $f(a)=0+b$
\end_inset

, and returning 
\begin_inset Formula $1+0$
\end_inset

 otherwise
\end_layout

\begin_layout Itemize
Identity law: 
\size footnotesize

\begin_inset Formula $f=\text{id}_{\diamond_{\text{Opt}}}$
\end_inset

, so 
\begin_inset Formula $f(a)=0+a$
\end_inset

 and 
\begin_inset Formula $\text{fmapOpt}_{G}f=\text{id}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Hence we get
\size footnotesize
 
\begin_inset Formula $\text{fmapOpt}_{F}(\text{id}_{\diamond_{\text{Opt}}})(1+a\times q)=1+a\times q$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Composition law: 
\size footnotesize
need only to check for arguments 
\begin_inset Formula $0+a\times q$
\end_inset

, and only when 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

 and 
\begin_inset Formula $f_{2}(b)=0+c$
\end_inset

, in which case 
\begin_inset Formula $(f_{1}\diamond_{\text{Opt}}f_{2})(a)=0+c$
\end_inset

; then 
\begin_inset Formula 
\begin{align*}
 & (\text{fmapOpt}_{F}\,f_{1}\circ\text{fmapOpt}_{F}\,f_{2})(0+a\times q)\\
=\  & \text{fmapOpt}_{F}(f_{2})\left(\text{fmapOpt}_{F}(f_{1})(0+a\times q)\right)\\
=\  & \text{fmapOpt}_{F}(f_{2})\left(0+b\times\text{fmapOpt}_{G}(f_{1})(q)\right)\\
=\  & 0+c\times(\text{fmapOpt}_{G}\,f_{1}\circ\text{fmapOpt}_{G}\,f_{2})(q)\\
=\  & 0+c\times\text{fmapOpt}_{G}(f_{1}\diamond_{\text{Opt}}f_{2})(q)\\
=\  & \text{fmapOpt}_{F}(f_{1}\diamond_{\text{Opt}}f_{2})(0+a\times q)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
This is a 
\begin_inset Quotes eld
\end_inset

greedy filter
\begin_inset Quotes erd
\end_inset

: if 
\begin_inset Formula $f(a)$
\end_inset

 is empty, will delete all data in 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Worked examples II: Constructions of filterable functors III
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
(6) The 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 laws hold for 
\begin_inset Formula $F^{A}\equiv G^{A}+A\times F^{A}$
\end_inset

 if they hold for 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
For 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

, we have 
\begin_inset Formula $\text{fmapOpt}_{G}(f):G^{A}\Rightarrow G^{B}$
\end_inset

 and 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}(f):F^{A}\Rightarrow F^{B}$
\end_inset

 (for use in recursive arguments as the inductive assumption)
\end_layout

\begin_layout Itemize

\size footnotesize
Define 
\begin_inset Formula $\text{fmapOpt}_{F}(f)(q^{G^{A}}+a^{A}\times p^{F^{A}})$
\end_inset

 by returning 
\begin_inset Formula $0+\text{fmapOpt}_{F}^{\prime}(f)(p)$
\end_inset

 if 
\begin_inset Formula $f(a)=1+0$
\end_inset

, and 
\begin_inset Formula $\text{fmapOpt}_{G}(f)(q)+b\times\text{fmapOpt}_{F}^{\prime}(f)(p)$
\end_inset

 otherwise
\end_layout

\begin_layout Itemize
Identity law: 
\size footnotesize

\begin_inset Formula $\text{id}_{\diamond_{\text{Opt}}}(x)\neq1+0$
\end_inset


\size default
, so 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F}(\text{id}_{\diamond_{\text{Opt}}})(q+a\times p)=q+a\times p$
\end_inset

 
\end_layout

\begin_layout Itemize
Composition law: 
\size footnotesize

\begin_inset Formula $(\text{fmapOpt}_{F}(f_{1})\circ\text{fmapOpt}_{F}(f_{2}))(q+a\times p)=\text{fmapOpt}_{F}(f_{1}\diamond_{\text{Opt}}f_{2})(q+a\times p)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
For arguments 
\begin_inset Formula $q+0$
\end_inset

, the laws for 
\begin_inset Formula $G^{A}$
\end_inset

 hold; so assume arguments 
\begin_inset Formula $0+a\times p$
\end_inset

.
 When 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

 and 
\begin_inset Formula $f_{2}(b)=0+c$
\end_inset

, the proof of the previous example will go through.
 So we need to consider the two cases 
\begin_inset Formula $f_{1}(a)=1+0$
\end_inset

 and 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

, 
\begin_inset Formula $f_{2}(b)=1+0$
\end_inset

 
\end_layout

\begin_layout Itemize

\size footnotesize
If 
\begin_inset Formula $f_{1}(a)=1+0$
\end_inset

 then 
\begin_inset Formula $(f_{1}\diamond_{\text{Opt}}f_{2})(a)=1+0$
\end_inset

; to show 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}(f_{2})(\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 
\begin_inset Formula $=\text{fmapOpt}_{F}^{\prime}(f_{1}\diamond_{\text{Opt}}f_{2})(p)$
\end_inset

, use the inductive assumption about 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}$
\end_inset

 on 
\begin_inset Formula $p$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
If 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

 and 
\begin_inset Formula $f_{2}(b)=1+0$
\end_inset

 then 
\begin_inset Formula $(f_{1}\diamond_{\text{Opt}}f_{2})(a)=1+0$
\end_inset

; to show 
\begin_inset Formula $\text{fmapOpt}_{F}(f_{2})(0+b\times\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 
\begin_inset Formula $=\text{fmapOpt}_{F}^{\prime}(f_{1}\diamond_{\text{Opt}}f_{2})(p)$
\end_inset

, rewrite 
\begin_inset Formula $\text{fmapOpt}_{F}(f_{2})(0+b\times\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 
\begin_inset Formula $=\text{fmapOpt}_{F}^{\prime}(f_{2})(\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 and again use the inductive assumption about 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}$
\end_inset

 on 
\begin_inset Formula $p$
\end_inset


\end_layout

\begin_layout Standard
This is a 
\begin_inset Quotes eld
\end_inset

list-like filter
\begin_inset Quotes erd
\end_inset

: if 
\begin_inset Formula $f(a)$
\end_inset

 is empty, will recurse into nested 
\begin_inset Formula $F^{A}$
\end_inset

 data
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Worked examples II: Constructions of filterable functors IV
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Use known filterable constructions to show that
\size footnotesize
 
\begin_inset Formula $F^{A}\equiv(\text{Int}\times\text{String})\Rightarrow\left(1+\text{Int}\times A+A\times\left(1+A\right)+\left(\text{Int}\Rightarrow1+A+A\times A\times\text{String}\right)\right)$
\end_inset

 
\size default
is a filterable functor
\end_layout

\begin_layout Itemize
Instead of implementing 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 and verifying laws by hand, we analyze the structure of this data type
 and use known constructions
\end_layout

\begin_layout Itemize
Define some auxiliary functors that are parts of the structure of 
\begin_inset Formula $F^{A}$
\end_inset

,
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $R_{1}^{A}=\left(\text{Int}\times\text{String}\right)\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $R_{2}^{A}=\text{Int}\Rightarrow A$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $G^{A}=1+\text{Int}\times A+A\times\left(1+A\right)$
\end_inset

 and 
\begin_inset Formula $H^{A}=1+A+A\times A\times\text{String}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Now we can rewrite 
\size footnotesize

\begin_inset Formula $F^{A}=R_{1}\left[G^{A}+R_{2}\left[H^{A}\right]\right]$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $G^{A}$
\end_inset

 is filterable by construction 5 because it is of the form 
\begin_inset Formula $G^{A}=1+A\times K^{A}$
\end_inset

 with filterable functor 
\begin_inset Formula $K^{A}=1+\text{Int}+A$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $K^{A}$
\end_inset

 is of the form 
\begin_inset Formula $1+A+X$
\end_inset

 with constant type 
\begin_inset Formula $X$
\end_inset

, so it is filterable by constructions 1 and 3 with the 
\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 functor 
\begin_inset Formula $1+A$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $H^{A}$
\end_inset

 is filterable by construction 5 with 
\begin_inset Formula $H^{A}=1+A\times\left(1+A\times\text{String}\right)$
\end_inset

, while 
\begin_inset Formula $1+A\times\text{String}$
\end_inset

 is filterable by constructions 5 and 1
\end_layout

\end_deeper
\begin_layout Itemize
Constructions 3 and 4 show that 
\begin_inset Formula $R_{1}\left[G^{A}+R_{2}\left[H^{A}\right]\right]$
\end_inset

 is filterable
\end_layout

\begin_layout Standard
Note that there are more than one way of implementing 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 here
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Exercises II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Implement a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance for 
\family typewriter
\size footnotesize
\color blue
type F[T] = G[H[T]]
\family default
\size default
\color inherit
 assuming that the functor 
\family typewriter
\size footnotesize
\color blue
H[T]
\family default
\size default
\color inherit
 already has a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance (construction 4).
 Verify the laws rigorously (i.e.
\begin_inset space \space{}
\end_inset

by calculations, not tests).
\end_layout

\begin_layout Enumerate
For 
\family typewriter
\size footnotesize
\color blue
type F[T] = Option[Int 
\begin_inset Formula $\Rightarrow$
\end_inset

 Option[(T, T)]]
\family default
\size default
\color inherit
, implement a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance.
 Show that the filterable laws hold by using known filterable constructions
 (avoiding explicit proofs or tests).
\end_layout

\begin_layout Enumerate
Implement a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance for 
\begin_inset Formula $F^{A}\equiv G^{A}+\text{Int}\times A\times A\times F^{A}$
\end_inset

 (recursive) for a filterable functor 
\begin_inset Formula $G^{A}$
\end_inset

.
 Verify the laws rigorously.
\end_layout

\begin_layout Enumerate
Show that 
\begin_inset Formula $F^{A}=1+A\times G^{A}$
\end_inset

 is in general 
\emph on
not
\emph default
 filterable if 
\begin_inset Formula $G^{A}$
\end_inset

 is an arbitrary (non-filterable) functor; it is enough to give an example.
\end_layout

\begin_layout Enumerate
Show that 
\begin_inset Formula $F^{A}=1+G^{A}+H^{A}$
\end_inset

 is filterable if 
\begin_inset Formula $1+G^{A}$
\end_inset

 and 
\begin_inset Formula $1+H^{A}$
\end_inset

 are filterable (even when 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset

 are by themselves not filterable).
\end_layout

\begin_layout Enumerate
Show that the functor 
\begin_inset Formula $F^{A}=A+\left(\text{Int}\Rightarrow A\right)$
\end_inset

 is not filterable.
\end_layout

\begin_layout Enumerate
Show that one can define 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit

\begin_inset Formula $:C^{1+A}\Rightarrow C^{A}$
\end_inset

 for any contrafunctor 
\begin_inset Formula $C^{A}$
\end_inset

 (not necessarily filterable), similarly to how one can define 
\family typewriter
\size footnotesize
\color blue
inflate
\family default
\size default
\color inherit

\begin_inset Formula $:F^{A}\Rightarrow F^{1+A}$
\end_inset

 for any functor 
\begin_inset Formula $F^{A}$
\end_inset

 (not necessarily filterable).
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Bonus slide I: Definition of filterable contrafunctors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
When is a contrafunctor filterable?
\end_layout

\begin_layout Standard
When a contrafunctor 
\size footnotesize

\begin_inset Formula $C^{A}$
\end_inset


\size default
 with 
\size footnotesize

\begin_inset Formula $\text{contrafmap}:\left(B\Rightarrow A\right)\Rightarrow C^{A}\Rightarrow C^{B}$
\end_inset


\size default
 has also
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
/
\family typewriter
\size footnotesize
\color blue
withFilter
\family default
\color inherit

\begin_inset Formula $:\left(A\Rightarrow\text{Boolean}\right)\Rightarrow C^{A}\Rightarrow C^{A}$
\end_inset


\size default
 – same as for functors
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
inflate
\family default
\color inherit

\begin_inset Formula $:C^{A}\Rightarrow C^{1+A}$
\end_inset


\size default
 and 
\family typewriter
\size footnotesize
\color blue
contrafmapOpt
\family default
\color inherit

\begin_inset Formula $:\left(B\Rightarrow1+A\right)\Rightarrow C^{A}\Rightarrow C^{B}$
\end_inset


\end_layout

\begin_layout Itemize
All three functions are computationally equivalent...
\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\text{filter}(p^{A\Rightarrow\text{Boolean}})=\text{inflate}^{C^{A}\Rightarrow C^{1+A}}\circ\text{contrafmap}(\text{bop}\,p)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\text{inflate}^{C^{A}\Rightarrow C^{1+A}}=\text{contrafmap}\left(0+x^{A}\Rightarrow x\right)\circ\text{filter}\left(\_\Rightarrow\text{true}\right)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\text{contrafmapOpt}\:f^{B\Rightarrow1+A}=\text{inflate}\circ\text{contrafmap}\,f$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\text{inflate}=\text{contrafmapOpt}\,(\text{id}^{1+A\Rightarrow1+A})$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
but have different laws
\end_layout

\begin_deeper
\begin_layout Itemize
4 laws (naturality, conjunction, identity, partial function) for 
\family typewriter
\size footnotesize
\color blue
filter
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
3 laws (naturality, conjunction, identity) for 
\family typewriter
\size footnotesize
\color blue
inflate
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
2 laws (identity, contracomposition) for 
\family typewriter
\size footnotesize
\color blue
contrafmapOpt
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
as before, 
\family typewriter
\size footnotesize
\color blue
contrafmapOpt
\family default
\size default
\color inherit
 is a 
\begin_inset Quotes eld
\end_inset

twisted
\begin_inset Quotes erd
\end_inset

 version of 
\family typewriter
\size footnotesize
\color blue
contrafmap
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Examples of filterable contrafunctors
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $C^{A}\equiv A\Rightarrow1+Z$
\end_inset

 where 
\begin_inset Formula $Z$
\end_inset

 is a fixed type
\end_layout

\begin_layout Itemize
\begin_inset Formula $C^{A}\equiv1+A\Rightarrow Z$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Examples of non-filterable contrafunctors
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $C^{A}\equiv A\times F^{A}\Rightarrow Z$
\end_inset

 – cannot implement 
\family typewriter
\size footnotesize
\color blue
inflate
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Bonus slide II: Structure of filterable contrafunctors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
How to build up a filterable contrafunctor from parts?
\end_layout

\begin_layout Itemize
Filterable contrafunctors 
\begin_inset Quotes eld
\end_inset

can consume fewer data items
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
The easiest function to consider first is 
\family typewriter
\size footnotesize
\color blue
inflate
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard
Some constructions of filterable contrafunctors:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $C^{A}=Z$
\end_inset

 (constant contrafunctor)
\end_layout

\begin_deeper
\begin_layout Standard
Functor constructions (no need to check laws for these): 
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any filterable contrafunctor 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}+H^{A}$
\end_inset

 for any filterable contrafunctor 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{H^{A}}$
\end_inset

 for 
\begin_inset Formula $H^{A}$
\end_inset

 a filterable (contra)functor and 
\begin_inset Formula $G^{A}$
\end_inset

 any (contra)functor – various combinations possible here
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\Rightarrow H^{A}$
\end_inset

 if
\emph on
 
\emph default
functor 
\begin_inset Formula $G^{A}$
\end_inset

 and contrafunctor 
\begin_inset Formula $H^{A}$
\end_inset

 
\emph on
both
\emph default
 
\emph on
filterable
\end_layout

\begin_deeper
\begin_layout Standard
Special constructions:
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv1+A\times G^{A}\Rightarrow H^{A}$
\end_inset

 where 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset

 are filterable
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv A\times G^{A}\Rightarrow1+H^{A}$
\end_inset

 if 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset

 are filterable
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
End of slides.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
