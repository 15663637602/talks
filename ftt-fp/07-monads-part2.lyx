#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 7: Functor-lifted computations II]{Chapter 7: Computations lifted to a functor context II}
\subtitle{Part 2: Laws and structure of semimonads}
\author{Sergei Winitzki}
\date{2018-03-11}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{headline}{} % disable headline at top
\setbeamertemplate{navigation symbols}{} % disable navigation bar at bottom
\usepackage[all]{xy}
\makeatletter
% Macros to assist LyX with XYpic when using scaling.
\newcommand{\xyScaleX}[1]{%
\makeatletter
\xydef@\xymatrixcolsep@{#1}
\makeatother
} % end of \xyScaleX
\makeatletter
\newcommand{\xyScaleY}[1]{%
\makeatletter
\xydef@\xymatrixrowsep@{#1}
\makeatother
} % end of \xyScaleY
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Beginning of slides.
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws I: The intuitions
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
What properties of functor block programs do we expect to have?
\end_layout

\begin_layout Itemize
In 
\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 c
\family default
\size default
\color inherit
, the value of 
\family typewriter
\size footnotesize
\color blue
x
\family default
\size default
\color inherit
 will 
\emph on
go over items
\emph default
 held in container 
\family typewriter
\size footnotesize
\color blue
c
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Manipulating items in container is followed by a generator:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y = f(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
      .map(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 f(x))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
cont1.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont2(f(x))) = cont1.map(f).flatMap(y 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont2(y))
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Manipulating items in container is preceded by a generator:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z = f(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
       .map(f)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset

cont1.flatMap(cont2).map(f)
\family default
\size default
\color inherit
 
\family typewriter
\size footnotesize
\color blue
= cont1.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont2(x).map(f))
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
After 
\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 c
\family default
\size default
\color inherit
, further computations will use 
\emph on
all those
\emph default
 
\family typewriter
\size footnotesize
\color blue
x
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 p(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 for { x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
           yy 
\begin_inset Formula $\leftarrow$
\end_inset

 p(x) } yield yy
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset

cont.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 p(x).flatMap(cont2)) = cont.flatMap(p).flatMap(cont2)
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws II: The laws for 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
To use the concise notation, denote 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 by 
\size footnotesize

\begin_inset Formula $\text{flm}$
\end_inset


\size default
 
\end_layout

\begin_layout Standard
A 
\series bold
semimonad
\series default
 
\begin_inset Formula $S^{A}$
\end_inset

 has 
\size footnotesize

\begin_inset Formula $\text{flm}^{\left[S,A,B\right]}:\left(A\Rightarrow S^{B}\right)\Rightarrow S^{A}\Rightarrow S^{B}$
\end_inset


\size default
 with 3 laws:
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\,(f^{A\Rightarrow B}\circ g^{B\Rightarrow S^{C}})=\text{fmap}\,f\circ\text{flm}\,g$
\end_inset


\size default
 
\size footnotesize
(naturality in 
\begin_inset Formula $A$
\end_inset

)
\size default
 
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{B}\ar[rd]\sp(0.5){\ \text{flm}\,g^{B\Rightarrow S^{C}}}\\
S^{A}\ar[ru]\sp(0.5){\text{fmap}\,f^{A\Rightarrow B}\ }\ar[rr]\sb(0.5){\text{flm}\,(f^{A\Rightarrow B}\circ\,g^{B\Rightarrow S^{C}})\,} &  & S^{C}
}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\,\big(f^{A\Rightarrow S^{B}}\circ\text{fmap}\,g^{B\Rightarrow C}\big)=\text{flm}\,f\circ\text{fmap}\,g$
\end_inset


\size default
 
\size footnotesize
(naturality in 
\begin_inset Formula $B$
\end_inset

)
\size default
 
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{B}\ar[rd]\sp(0.5){\ \text{fmap}\,g^{B\Rightarrow C}}\\
S^{A}\ar[ru]\sp(0.5){\text{flm}\,f^{A\Rightarrow S^{B}}\ }\ar[rr]\sb(0.5){\text{flm}\,(f^{A\Rightarrow S^{B}}\circ\,\text{fmap}\,g^{B\Rightarrow C})\,} &  & S^{C}
}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\,\big(f^{A\Rightarrow S^{B}}\circ\text{flm}\,g^{B\Rightarrow S^{C}}\big)=\text{flm}\,f\circ\text{flm}\,g$
\end_inset


\size default
 
\size footnotesize
(composition)
\size default
 
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{B}\ar[rd]\sp(0.5){\ \text{flm}\,g^{B\Rightarrow S^{C}}}\\
S^{A}\ar[ru]\sp(0.5){\text{flm}\,f^{A\Rightarrow S^{B}}\ }\ar[rr]\sb(0.5){\text{flm}\,\big(f^{A\Rightarrow S^{B}}\circ\,\text{flm}\,g^{B\Rightarrow S^{C}}\big)\,} &  & S^{C}
}
\]

\end_inset


\end_layout

\begin_layout Standard
Is there a shorter formulation of the laws?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws III: The laws for 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The methods 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 (denoted by 
\size footnotesize

\begin_inset Formula $\text{ftn}$
\end_inset


\size default
) and 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 are equivalent:
\family typewriter
\size footnotesize
\color blue
 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula 
\begin{align*}
\text{ftn}^{\left[S,A\right]}:S^{S^{A}}\Rightarrow S^{A} & =\text{flm}^{\left[S,S^{A},A\right]}(m^{S^{A}}\Rightarrow m)\\
\text{flm}\,\big(f^{A\Rightarrow S^{B}}\big) & =\text{fmap}\,f\circ\text{ftn}
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{S^{B}}\ar[rd]\sp(0.5){\ \text{ftn}\ }\\
S^{A}\ar[ru]\sp(0.5){\text{fmap}\,f^{A\Rightarrow S^{B}}\ }\ar[rr]\sb(0.5){\text{flm}\,\big(f^{A\Rightarrow S^{B}}\big)\,} &  & S^{B}
}
\]

\end_inset


\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

 
\begin_inset space \space{}
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
It turns out that 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 has only 2 laws:
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{fmap}\big(\text{fmap}\,f^{A\Rightarrow B}\big)\circ\text{ftn}^{\left[S,B\right]}=\text{ftn}^{\left[S,A\right]}\circ\text{fmap}\,f$
\end_inset


\size default
 
\size footnotesize
(naturality)
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{5pc} & S^{S^{B}}\ar[rd]\sp(0.5){\ \text{ftn}^{\left[S,B\right]}}\\
S^{S^{A}}\ar[ru]\sp(0.5){\text{fmap}\,\big(\text{fmap}\,f^{A\Rightarrow B}\big)\ \ }\ar[rd]\sb(0.5){\text{ftn}^{\left[S,A\right]}\,} &  & S^{B}\\
 & S^{A}\ar[ru]\sb(0.5){\text{fmap}\,f^{A\Rightarrow B}}
}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{fmap}\,(\text{ftn}^{\left[S\right]})\circ\text{ftn}^{\left[S\right]}=\text{ftn}^{\left[S^{S}\right]}\circ\text{ftn}^{\left[S\right]}$
\end_inset


\size default
 
\size footnotesize
(associativity) 
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{5pc} & S^{S^{A}}\ar[rd]\sp(0.5){\ \text{ftn}^{\left[S\right]}}\\
S^{S^{S^{A}}}\ar[ru]\sp(0.5){\text{fmap}\,(\text{ftn}^{\left[S\right]})\ }\ar[rd]\sb(0.5){\text{ftn}^{\left[S^{S}\right]}\,} &  & S^{A}\\
 & S^{S^{A}}\ar[ru]\sb(0.5){\text{ftn}^{\left[S\right]}}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws III: Deriving the laws for 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Denote for brevity 
\begin_inset Formula $q_{\uparrow}\equiv\text{fmap}^{\left[S\right]}\,q$
\end_inset

 for any function 
\begin_inset Formula $q$
\end_inset


\end_layout

\begin_layout Standard
Express 
\begin_inset Formula $\text{flm}\,f=f_{\uparrow}\circ\text{ftn}$
\end_inset

 and substitute that into 
\begin_inset Formula $\text{flm}$
\end_inset

's 3 laws:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\text{flm}\left(f\circ g\right)=f_{\uparrow}\circ\text{flm}\,g$
\end_inset

 gives 
\begin_inset Formula $\left(f\circ g\right)_{\uparrow}\circ\text{ftn}=f_{\uparrow}\circ g_{\uparrow}\circ\text{ftn}$
\end_inset


\begin_inset Newline newline
\end_inset

– this law holds automatically due to functor composition law
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\text{flm}\left(f\circ g_{\uparrow}\right)=\text{flm}\,f\circ g_{\uparrow}$
\end_inset

 gives 
\begin_inset Formula $\left(f\circ h\right)_{\uparrow}\circ\text{ftn}=f_{\uparrow}\circ\text{ftn}\circ h$
\end_inset

;
\begin_inset Newline newline
\end_inset

using the functor composition law, we reduce this to 
\begin_inset Formula $h_{\uparrow}\circ\text{ftn}=\text{ftn}\circ h$
\end_inset


\begin_inset Newline newline
\end_inset

– this is the naturality law for 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\left(f\circ\text{flm}\,g\right)=\text{flm}\,f\circ\text{flm}\,g$
\end_inset

 
\size default
with functor composition law gives
\size footnotesize
 
\begin_inset Formula $f_{\uparrow}\circ g_{\uparrow\uparrow}\circ\text{ftn}_{\uparrow}\circ\text{ftn}=f_{\uparrow}\circ\text{ftn}\circ g_{\uparrow}\circ\text{ftn}$
\end_inset

;
\size default
 using 
\begin_inset Formula $\text{ftn}$
\end_inset

's naturality and omitting the common factor
\size footnotesize
 
\begin_inset Formula $f_{\uparrow}\circ g_{\uparrow\uparrow}$
\end_inset


\size default
, we get 
\begin_inset Formula $\text{ftn}$
\end_inset

's associativity:
\size footnotesize
 
\begin_inset Formula $\text{ftn}_{\uparrow}\circ\text{ftn}=\text{ftn}\circ\text{ftn}$
\end_inset


\size default
 
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 has the simplest type signature and the fewest laws
\end_layout

\begin_layout Itemize
It is usually easy to check naturality!
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Parametricity theorem
\series default
: Any 
\emph on
fully parametric
\emph default
 code for a function of type 
\begin_inset Formula $F^{A}\Rightarrow G^{A}$
\end_inset

 implements a natural transformation 
\begin_inset Formula $F\leadsto G$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Checking 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
's associativity needs more work
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

accumulated context
\begin_inset Quotes erd
\end_inset

 is completely different for these monads
\end_layout

\end_deeper
\begin_layout Standard
The 
\family typewriter
\size footnotesize
\color blue
cats
\family default
\size default
\color inherit
 library has a 
\family typewriter
\size footnotesize
\color blue
FlatMap
\family default
\size default
\color inherit
 type class, defining 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 via 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws IV: Checking the laws of 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Implement 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 for these functors and check the laws (see code):
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 monad: 
\begin_inset Formula $F^{A}\equiv1+A$
\end_inset

; 
\begin_inset Formula $\text{ftn}:1+\left(1+A\right)\Rightarrow1+A$
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
 monad: 
\begin_inset Formula $F^{A}\equiv Z+A$
\end_inset

; 
\begin_inset Formula $\text{ftn}:Z+\left(Z+A\right)\Rightarrow Z+A$
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
List
\family default
\size default
\color inherit
 monad: 
\begin_inset Formula $F^{A}\equiv\text{List}^{A}$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\text{List}^{\text{List}^{A}}\Rightarrow\text{List}^{A}$
\end_inset


\end_layout

\begin_layout Itemize
Writer monad: 
\begin_inset Formula $F^{A}\equiv A\times W$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(A\times W\right)\times W\Rightarrow A\times W$
\end_inset


\end_layout

\begin_layout Itemize
Reader monad: 
\begin_inset Formula $F^{A}\equiv R\Rightarrow A$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(R\Rightarrow\left(R\Rightarrow A\right)\right)\Rightarrow R\Rightarrow A$
\end_inset


\end_layout

\begin_layout Itemize
State: 
\begin_inset Formula $F^{A}\equiv S\Rightarrow A\times S$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(S\Rightarrow\left(S\Rightarrow A\times S\right)\times S\right)\Rightarrow S\Rightarrow A\times S$
\end_inset


\end_layout

\begin_layout Itemize
Continuation monad: 
\begin_inset Formula $F^{A}\equiv\left(A\Rightarrow R\right)\Rightarrow R$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(\left(\left(\left(A\Rightarrow R\right)\Rightarrow R\right)\Rightarrow R\right)\Rightarrow R\right)\Rightarrow\left(A\Rightarrow R\right)\Rightarrow R$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Code implementing these 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 functions is 
\emph on
fully parametric
\emph default
 in 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Naturality of these functions follows from parametricity theorem
\end_layout

\end_deeper
\begin_layout Itemize
Associativity needs to be checked for each monad!
\end_layout

\begin_layout Itemize
Example of a useful semimonad that is 
\emph on
not
\emph default
 a full monad:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv A\times V\times W$
\end_inset

; 
\begin_inset Formula $\text{ftn}\left(\left(a\times v_{1}\times w_{1}\right)\times v_{2}\times w_{2}\right)=a\times v_{1}\times w_{2}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Examples of 
\emph on
non-associative
\emph default
 (i.e.
\begin_inset space \space{}
\end_inset

wrong) implementations of 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv A\times W\times W$
\end_inset

; 
\begin_inset Formula $\text{ftn}\left(\left(a\times v_{1}\times v_{2}\right)\times w_{1}\times w_{2}\right)=a\times w_{2}\times w_{1}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv\text{List}^{A}$
\end_inset

, but 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 concatenates the nested lists in reverse order
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Implement
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Structure of semimonads
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
How to recognize a semimonad by its type?
\end_layout

\begin_layout Standard
Intuition from 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
: reshuffle data in 
\begin_inset Formula $F^{F^{A}}$
\end_inset

 to fit into 
\begin_inset Formula $F^{A}$
\end_inset


\end_layout

\begin_layout Standard
Some constructions of exponential-polynomial semimonads 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}=Z$
\end_inset

 (constant functor) for a fixed type 
\begin_inset Formula $Z$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any semimonads 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}+G^{F^{A}}$
\end_inset

 (recursive) for any functor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Worked examples II: Constructions of filterable functors I
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
(2) The 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 laws hold for 
\begin_inset Formula $F^{A}\times G^{A}$
\end_inset

 if they hold for 
\begin_inset Formula $F^{A}$
\end_inset

 and 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

, get 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F}(f):F^{A}\Rightarrow F^{B}$
\end_inset

 
\size default
and 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{G}(f):G^{A}\Rightarrow G^{B}$
\end_inset


\end_layout

\begin_layout Itemize
Define 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F\times G}f\equiv p^{F^{A}}\times q^{G^{A}}\Rightarrow\text{fmapOpt}_{F}(f)(p)\times\text{fmapOpt}_{G}(f)(q)$
\end_inset


\end_layout

\begin_layout Itemize
Identity law: 
\begin_inset Formula $f=\text{id}_{\diamond_{\text{Opt}}}$
\end_inset

, so 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F}f=\text{id}$
\end_inset


\size default
 and 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{G}f=\text{id}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Hence we get 
\begin_inset Formula $\text{fmapOpt}_{F+G}(f)(p\times q)=\text{id}(p)\times\text{id}(q)=p\times q$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Composition law:
\size footnotesize

\begin_inset Formula 
\begin{align*}
 & (\text{fmapOpt}_{F\times G}\,f_{1}\circ\text{fmapOpt}_{F+G}\,f_{2})(p\times q)\\
=\  & \text{fmapOpt}_{F\times G}(f_{2})\left(\text{fmapOpt}_{F}(f_{1})(p)\times\text{fmapOpt}_{G}(f_{1})(q)\right)\\
=\  & (\text{fmapOpt}_{F}\,f_{1}\circ\text{fmapOpt}_{F}\,f_{2})(p)\times\left(\text{fmapOpt}_{G}\,f_{1}\circ\text{fmapOpt}_{G}\,f_{2}\right)(q)\\
=\  & \text{fmapOpt}_{F}(f_{1}\diamond_{\text{Opt}}f_{2})(p)\times\text{fmapOpt}_{G}(f_{1}\diamond f_{2})(q)\\
=\  & \text{fmapOpt}_{F\times G}(f_{1}\diamond_{\text{Opt}}f_{2})(p\times q)
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize
Exactly the same proof as that for functor property for 
\begin_inset Formula $F^{A}\times G^{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
this is because 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 corresponds to a generalized functor
\end_layout

\end_deeper
\begin_layout Itemize
New proofs are necessary only when using non-filterable functors
\end_layout

\begin_deeper
\begin_layout Itemize
these are used in constructions 4 – 6
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Worked examples II: Constructions of filterable functors II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
(5) The 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 laws hold for 
\begin_inset Formula $F^{A}\equiv1+A\times G^{A}$
\end_inset

 if they hold for 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

, get 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{G}(f):G^{A}\Rightarrow G^{B}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
Define 
\begin_inset Formula $\text{fmapOpt}_{F}(f)(1+a^{A}\times q^{G^{A}})$
\end_inset

 by returning 
\begin_inset Formula $0+b\times\text{fmapOpt}_{G}(f)(q)$
\end_inset

 if the argument is 
\begin_inset Formula $0+a\times q$
\end_inset

 and 
\begin_inset Formula $f(a)=0+b$
\end_inset

, and returning 
\begin_inset Formula $1+0$
\end_inset

 otherwise
\end_layout

\begin_layout Itemize
Identity law: 
\size footnotesize

\begin_inset Formula $f=\text{id}_{\diamond_{\text{Opt}}}$
\end_inset

, so 
\begin_inset Formula $f(a)=0+a$
\end_inset

 and 
\begin_inset Formula $\text{fmapOpt}_{G}f=\text{id}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Hence we get
\size footnotesize
 
\begin_inset Formula $\text{fmapOpt}_{F}(\text{id}_{\diamond_{\text{Opt}}})(1+a\times q)=1+a\times q$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Composition law: 
\size footnotesize
need only to check for arguments 
\begin_inset Formula $0+a\times q$
\end_inset

, and only when 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

 and 
\begin_inset Formula $f_{2}(b)=0+c$
\end_inset

, in which case 
\begin_inset Formula $(f_{1}\diamond_{\text{Opt}}f_{2})(a)=0+c$
\end_inset

; then 
\begin_inset Formula 
\begin{align*}
 & (\text{fmapOpt}_{F}\,f_{1}\circ\text{fmapOpt}_{F}\,f_{2})(0+a\times q)\\
=\  & \text{fmapOpt}_{F}(f_{2})\left(\text{fmapOpt}_{F}(f_{1})(0+a\times q)\right)\\
=\  & \text{fmapOpt}_{F}(f_{2})\left(0+b\times\text{fmapOpt}_{G}(f_{1})(q)\right)\\
=\  & 0+c\times(\text{fmapOpt}_{G}\,f_{1}\circ\text{fmapOpt}_{G}\,f_{2})(q)\\
=\  & 0+c\times\text{fmapOpt}_{G}(f_{1}\diamond_{\text{Opt}}f_{2})(q)\\
=\  & \text{fmapOpt}_{F}(f_{1}\diamond_{\text{Opt}}f_{2})(0+a\times q)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
This is a 
\begin_inset Quotes eld
\end_inset

greedy filter
\begin_inset Quotes erd
\end_inset

: if 
\begin_inset Formula $f(a)$
\end_inset

 is empty, will delete all data in 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Worked examples II: Constructions of filterable functors III
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
(6) The 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 laws hold for 
\begin_inset Formula $F^{A}\equiv G^{A}+A\times F^{A}$
\end_inset

 if they hold for 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
For 
\begin_inset Formula $f^{A\Rightarrow1+B}$
\end_inset

, we have 
\begin_inset Formula $\text{fmapOpt}_{G}(f):G^{A}\Rightarrow G^{B}$
\end_inset

 and 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}(f):F^{A}\Rightarrow F^{B}$
\end_inset

 (for use in recursive arguments as the inductive assumption)
\end_layout

\begin_layout Itemize

\size footnotesize
Define 
\begin_inset Formula $\text{fmapOpt}_{F}(f)(q^{G^{A}}+a^{A}\times p^{F^{A}})$
\end_inset

 by returning 
\begin_inset Formula $0+\text{fmapOpt}_{F}^{\prime}(f)(p)$
\end_inset

 if 
\begin_inset Formula $f(a)=1+0$
\end_inset

, and 
\begin_inset Formula $\text{fmapOpt}_{G}(f)(q)+b\times\text{fmapOpt}_{F}^{\prime}(f)(p)$
\end_inset

 otherwise
\end_layout

\begin_layout Itemize
Identity law: 
\size footnotesize

\begin_inset Formula $\text{id}_{\diamond_{\text{Opt}}}(x)\neq1+0$
\end_inset


\size default
, so 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}_{F}(\text{id}_{\diamond_{\text{Opt}}})(q+a\times p)=q+a\times p$
\end_inset

 
\end_layout

\begin_layout Itemize
Composition law: 
\size footnotesize

\begin_inset Formula $(\text{fmapOpt}_{F}(f_{1})\circ\text{fmapOpt}_{F}(f_{2}))(q+a\times p)=\text{fmapOpt}_{F}(f_{1}\diamond_{\text{Opt}}f_{2})(q+a\times p)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
For arguments 
\begin_inset Formula $q+0$
\end_inset

, the laws for 
\begin_inset Formula $G^{A}$
\end_inset

 hold; so assume arguments 
\begin_inset Formula $0+a\times p$
\end_inset

.
 When 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

 and 
\begin_inset Formula $f_{2}(b)=0+c$
\end_inset

, the proof of the previous example will go through.
 So we need to consider the two cases 
\begin_inset Formula $f_{1}(a)=1+0$
\end_inset

 and 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

, 
\begin_inset Formula $f_{2}(b)=1+0$
\end_inset

 
\end_layout

\begin_layout Itemize

\size footnotesize
If 
\begin_inset Formula $f_{1}(a)=1+0$
\end_inset

 then 
\begin_inset Formula $(f_{1}\diamond_{\text{Opt}}f_{2})(a)=1+0$
\end_inset

; to show 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}(f_{2})(\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 
\begin_inset Formula $=\text{fmapOpt}_{F}^{\prime}(f_{1}\diamond_{\text{Opt}}f_{2})(p)$
\end_inset

, use the inductive assumption about 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}$
\end_inset

 on 
\begin_inset Formula $p$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
If 
\begin_inset Formula $f_{1}(a)=0+b$
\end_inset

 and 
\begin_inset Formula $f_{2}(b)=1+0$
\end_inset

 then 
\begin_inset Formula $(f_{1}\diamond_{\text{Opt}}f_{2})(a)=1+0$
\end_inset

; to show 
\begin_inset Formula $\text{fmapOpt}_{F}(f_{2})(0+b\times\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 
\begin_inset Formula $=\text{fmapOpt}_{F}^{\prime}(f_{1}\diamond_{\text{Opt}}f_{2})(p)$
\end_inset

, rewrite 
\begin_inset Formula $\text{fmapOpt}_{F}(f_{2})(0+b\times\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 
\begin_inset Formula $=\text{fmapOpt}_{F}^{\prime}(f_{2})(\text{fmapOpt}_{F}^{\prime}(f_{1})(p))$
\end_inset

 and again use the inductive assumption about 
\begin_inset Formula $\text{fmapOpt}_{F}^{\prime}$
\end_inset

 on 
\begin_inset Formula $p$
\end_inset


\end_layout

\begin_layout Standard
This is a 
\begin_inset Quotes eld
\end_inset

list-like filter
\begin_inset Quotes erd
\end_inset

: if 
\begin_inset Formula $f(a)$
\end_inset

 is empty, will recurse into nested 
\begin_inset Formula $F^{A}$
\end_inset

 data
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Worked examples II: Constructions of filterable functors IV
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Use known filterable constructions to show that
\size footnotesize
 
\begin_inset Formula $F^{A}\equiv(\text{Int}\times\text{String})\Rightarrow\left(1+\text{Int}\times A+A\times\left(1+A\right)+\left(\text{Int}\Rightarrow1+A+A\times A\times\text{String}\right)\right)$
\end_inset

 
\size default
is a filterable functor
\end_layout

\begin_layout Itemize
Instead of implementing 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 and verifying laws by hand, we analyze the structure of this data type
 and use known constructions
\end_layout

\begin_layout Itemize
Define some auxiliary functors that are parts of the structure of 
\begin_inset Formula $F^{A}$
\end_inset

,
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $R_{1}^{A}=\left(\text{Int}\times\text{String}\right)\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $R_{2}^{A}=\text{Int}\Rightarrow A$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $G^{A}=1+\text{Int}\times A+A\times\left(1+A\right)$
\end_inset

 and 
\begin_inset Formula $H^{A}=1+A+A\times A\times\text{String}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Now we can rewrite 
\size footnotesize

\begin_inset Formula $F^{A}=R_{1}\left[G^{A}+R_{2}\left[H^{A}\right]\right]$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $G^{A}$
\end_inset

 is filterable by construction 5 because it is of the form 
\begin_inset Formula $G^{A}=1+A\times K^{A}$
\end_inset

 with filterable functor 
\begin_inset Formula $K^{A}=1+\text{Int}+A$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $K^{A}$
\end_inset

 is of the form 
\begin_inset Formula $1+A+X$
\end_inset

 with constant type 
\begin_inset Formula $X$
\end_inset

, so it is filterable by constructions 1 and 3 with the 
\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 functor 
\begin_inset Formula $1+A$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $H^{A}$
\end_inset

 is filterable by construction 5 with 
\begin_inset Formula $H^{A}=1+A\times\left(1+A\times\text{String}\right)$
\end_inset

, while 
\begin_inset Formula $1+A\times\text{String}$
\end_inset

 is filterable by constructions 5 and 1
\end_layout

\end_deeper
\begin_layout Itemize
Constructions 3 and 4 show that 
\begin_inset Formula $R_{1}\left[G^{A}+R_{2}\left[H^{A}\right]\right]$
\end_inset

 is filterable
\end_layout

\begin_layout Standard
Note that there are more than one way of implementing 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 here
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Exercises II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Implement a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance for 
\family typewriter
\size footnotesize
\color blue
type F[T] = G[H[T]]
\family default
\size default
\color inherit
 assuming that the functor 
\family typewriter
\size footnotesize
\color blue
H[T]
\family default
\size default
\color inherit
 already has a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance (construction 4).
 Verify the laws rigorously (i.e.
\begin_inset space \space{}
\end_inset

by calculations, not tests).
\end_layout

\begin_layout Enumerate
For 
\family typewriter
\size footnotesize
\color blue
type F[T] = Option[Int 
\begin_inset Formula $\Rightarrow$
\end_inset

 Option[(T, T)]]
\family default
\size default
\color inherit
, implement a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance.
 Show that the filterable laws hold by using known filterable constructions
 (avoiding explicit proofs or tests).
\end_layout

\begin_layout Enumerate
Implement a 
\family typewriter
\size footnotesize
\color blue
Filterable
\family default
\size default
\color inherit
 instance for 
\begin_inset Formula $F^{A}\equiv G^{A}+\text{Int}\times A\times A\times F^{A}$
\end_inset

 (recursive) for a filterable functor 
\begin_inset Formula $G^{A}$
\end_inset

.
 Verify the laws rigorously.
\end_layout

\begin_layout Enumerate
Show that 
\begin_inset Formula $F^{A}=1+A\times G^{A}$
\end_inset

 is in general 
\emph on
not
\emph default
 filterable if 
\begin_inset Formula $G^{A}$
\end_inset

 is an arbitrary (non-filterable) functor; it is enough to give an example.
\end_layout

\begin_layout Enumerate
Show that 
\begin_inset Formula $F^{A}=1+G^{A}+H^{A}$
\end_inset

 is filterable if 
\begin_inset Formula $1+G^{A}$
\end_inset

 and 
\begin_inset Formula $1+H^{A}$
\end_inset

 are filterable (even when 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset

 are by themselves not filterable).
\end_layout

\begin_layout Enumerate
Show that the functor 
\begin_inset Formula $F^{A}=A+\left(\text{Int}\Rightarrow A\right)$
\end_inset

 is not filterable.
\end_layout

\begin_layout Enumerate
Show that one can define 
\family typewriter
\size footnotesize
\color blue
deflate
\family default
\size default
\color inherit

\begin_inset Formula $:C^{1+A}\Rightarrow C^{A}$
\end_inset

 for any contrafunctor 
\begin_inset Formula $C^{A}$
\end_inset

 (not necessarily filterable), similarly to how one can define 
\family typewriter
\size footnotesize
\color blue
inflate
\family default
\size default
\color inherit

\begin_inset Formula $:F^{A}\Rightarrow F^{1+A}$
\end_inset

 for any functor 
\begin_inset Formula $F^{A}$
\end_inset

 (not necessarily filterable).
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
End of slides.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
